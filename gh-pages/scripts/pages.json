[{"name":"class FixedClassLoader(mModuleClassLoader: ClassLoader, mHostClassLoader: ClassLoader) : ClassLoader","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.FixedClassLoader","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-fixed-class-loader/index.html","searchKeys":["FixedClassLoader","class FixedClassLoader(mModuleClassLoader: ClassLoader, mHostClassLoader: ClassLoader) : ClassLoader","com.github.kyuubiran.ezxhelper.utils.parasitics.FixedClassLoader"]},{"name":"class IActivityManagerHandler(mOrigin: Any) : InvocationHandler","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.IActivityManagerHandler","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-i-activity-manager-handler/index.html","searchKeys":["IActivityManagerHandler","class IActivityManagerHandler(mOrigin: Any) : InvocationHandler","com.github.kyuubiran.ezxhelper.utils.parasitics.IActivityManagerHandler"]},{"name":"class MyHandler(mDefault: Handler.Callback?) : Handler.Callback","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyHandler","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-handler/index.html","searchKeys":["MyHandler","class MyHandler(mDefault: Handler.Callback?) : Handler.Callback","com.github.kyuubiran.ezxhelper.utils.parasitics.MyHandler"]},{"name":"class MyInstrumentation(mBase: Instrumentation) : Instrumentation","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/index.html","searchKeys":["MyInstrumentation","class MyInstrumentation(mBase: Instrumentation) : Instrumentation","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation"]},{"name":"class Observe<T>(init: T, onValueChanged: (T) -> Unit? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Observe","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/index.html","searchKeys":["Observe","class Observe<T>(init: T, onValueChanged: (T) -> Unit? = null)","com.github.kyuubiran.ezxhelper.utils.Observe"]},{"name":"class ValueChangedEvent<T>","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/index.html","searchKeys":["ValueChangedEvent","class ValueChangedEvent<T>","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent"]},{"name":"class XposedHookFactory(priority: Int = XCallback.PRIORITY_DEFAULT) : XC_MethodHook","description":"com.github.kyuubiran.ezxhelper.utils.XposedHookFactory","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-xposed-hook-factory/index.html","searchKeys":["XposedHookFactory","class XposedHookFactory(priority: Int = XCallback.PRIORITY_DEFAULT) : XC_MethodHook","com.github.kyuubiran.ezxhelper.utils.XposedHookFactory"]},{"name":"const val DEBUG: Int = 1","description":"com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.DEBUG","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-log-level/-d-e-b-u-g.html","searchKeys":["DEBUG","const val DEBUG: Int = 1","com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.DEBUG"]},{"name":"const val ERROR: Int = 4","description":"com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.ERROR","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-log-level/-e-r-r-o-r.html","searchKeys":["ERROR","const val ERROR: Int = 4","com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.ERROR"]},{"name":"const val INFO: Int = 2","description":"com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.INFO","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-log-level/-i-n-f-o.html","searchKeys":["INFO","const val INFO: Int = 2","com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.INFO"]},{"name":"const val VERBOSE: Int = 0","description":"com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.VERBOSE","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-log-level/-v-e-r-b-o-s-e.html","searchKeys":["VERBOSE","const val VERBOSE: Int = 0","com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.VERBOSE"]},{"name":"const val WARN: Int = 3","description":"com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.WARN","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-log-level/-w-a-r-n.html","searchKeys":["WARN","const val WARN: Int = 3","com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel.WARN"]},{"name":"fun <T : View> ViewGroup.findViewByConditionAs(condition: (view: View) -> Boolean): T?","description":"com.github.kyuubiran.ezxhelper.utils.findViewByConditionAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-view-by-condition-as.html","searchKeys":["findViewByConditionAs","fun <T : View> ViewGroup.findViewByConditionAs(condition: (view: View) -> Boolean): T?","com.github.kyuubiran.ezxhelper.utils.findViewByConditionAs"]},{"name":"fun <T> Any.findFieldObjectAs(findSuper: Boolean = false, condition: FieldCondition): T","description":"com.github.kyuubiran.ezxhelper.utils.findFieldObjectAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-object-as.html","searchKeys":["findFieldObjectAs","fun <T> Any.findFieldObjectAs(findSuper: Boolean = false, condition: FieldCondition): T","com.github.kyuubiran.ezxhelper.utils.findFieldObjectAs"]},{"name":"fun <T> Any.findFieldObjectOrNullAs(findSuper: Boolean = false, condition: FieldCondition): T?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldObjectOrNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-object-or-null-as.html","searchKeys":["findFieldObjectOrNullAs","fun <T> Any.findFieldObjectOrNullAs(findSuper: Boolean = false, condition: FieldCondition): T?","com.github.kyuubiran.ezxhelper.utils.findFieldObjectOrNullAs"]},{"name":"fun <T> Any.getObjectAs(field: Field): T","description":"com.github.kyuubiran.ezxhelper.utils.getObjectAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-as.html","searchKeys":["getObjectAs","fun <T> Any.getObjectAs(field: Field): T","com.github.kyuubiran.ezxhelper.utils.getObjectAs"]},{"name":"fun <T> Any.getObjectAs(objName: String, type: Class<*>? = null): T","description":"com.github.kyuubiran.ezxhelper.utils.getObjectAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-as.html","searchKeys":["getObjectAs","fun <T> Any.getObjectAs(objName: String, type: Class<*>? = null): T","com.github.kyuubiran.ezxhelper.utils.getObjectAs"]},{"name":"fun <T> Any.getObjectByTypeAs(type: Class<*>): T","description":"com.github.kyuubiran.ezxhelper.utils.getObjectByTypeAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-by-type-as.html","searchKeys":["getObjectByTypeAs","fun <T> Any.getObjectByTypeAs(type: Class<*>): T","com.github.kyuubiran.ezxhelper.utils.getObjectByTypeAs"]},{"name":"fun <T> Any.getObjectOrNullAs(field: Field): T?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null-as.html","searchKeys":["getObjectOrNullAs","fun <T> Any.getObjectOrNullAs(field: Field): T?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNullAs"]},{"name":"fun <T> Any.getObjectOrNullAs(objName: String, type: Class<*>? = null): T?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null-as.html","searchKeys":["getObjectOrNullAs","fun <T> Any.getObjectOrNullAs(objName: String, type: Class<*>? = null): T?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNullAs"]},{"name":"fun <T> Any.getObjectOrNullByTypeAs(type: Class<*>): T?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNullByTypeAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null-by-type-as.html","searchKeys":["getObjectOrNullByTypeAs","fun <T> Any.getObjectOrNullByTypeAs(type: Class<*>): T?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNullByTypeAs"]},{"name":"fun <T> Any.invokeMethodAs(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): T?","description":"com.github.kyuubiran.ezxhelper.utils.invokeMethodAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-method-as.html","searchKeys":["invokeMethodAs","fun <T> Any.invokeMethodAs(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): T?","com.github.kyuubiran.ezxhelper.utils.invokeMethodAs"]},{"name":"fun <T> Any.invokeMethodAutoAs(methodName: String, vararg args: Any?): T?","description":"com.github.kyuubiran.ezxhelper.utils.invokeMethodAutoAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-method-auto-as.html","searchKeys":["invokeMethodAutoAs","fun <T> Any.invokeMethodAutoAs(methodName: String, vararg args: Any?): T?","com.github.kyuubiran.ezxhelper.utils.invokeMethodAutoAs"]},{"name":"fun <T> Class<*>.getStaticObjectAs(objName: String, type: Class<*>? = null): T","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-as.html","searchKeys":["getStaticObjectAs","fun <T> Class<*>.getStaticObjectAs(objName: String, type: Class<*>? = null): T","com.github.kyuubiran.ezxhelper.utils.getStaticObjectAs"]},{"name":"fun <T> Class<*>.getStaticObjectByTypeAs(type: Class<*>): T","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectByTypeAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-by-type-as.html","searchKeys":["getStaticObjectByTypeAs","fun <T> Class<*>.getStaticObjectByTypeAs(type: Class<*>): T","com.github.kyuubiran.ezxhelper.utils.getStaticObjectByTypeAs"]},{"name":"fun <T> Class<*>.getStaticObjectOrNullAs(objName: String, type: Class<*>? = null): T?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-or-null-as.html","searchKeys":["getStaticObjectOrNullAs","fun <T> Class<*>.getStaticObjectOrNullAs(objName: String, type: Class<*>? = null): T?","com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullAs"]},{"name":"fun <T> Class<*>.getStaticObjectOrNullByTypeAs(type: Class<*>): T?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullByTypeAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-or-null-by-type-as.html","searchKeys":["getStaticObjectOrNullByTypeAs","fun <T> Class<*>.getStaticObjectOrNullByTypeAs(type: Class<*>): T?","com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullByTypeAs"]},{"name":"fun <T> Class<*>.invokeStaticMethodAs(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): T?","description":"com.github.kyuubiran.ezxhelper.utils.invokeStaticMethodAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-static-method-as.html","searchKeys":["invokeStaticMethodAs","fun <T> Class<*>.invokeStaticMethodAs(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): T?","com.github.kyuubiran.ezxhelper.utils.invokeStaticMethodAs"]},{"name":"fun <T> Class<*>.invokeStaticMethodAutoAs(methodName: String, vararg args: Any?): T?","description":"com.github.kyuubiran.ezxhelper.utils.invokeStaticMethodAutoAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-static-method-auto-as.html","searchKeys":["invokeStaticMethodAutoAs","fun <T> Class<*>.invokeStaticMethodAutoAs(methodName: String, vararg args: Any?): T?","com.github.kyuubiran.ezxhelper.utils.invokeStaticMethodAutoAs"]},{"name":"fun <T> Class<*>.newInstanceAs(args: Args = args(), argTypes: ArgTypes = argTypes()): T?","description":"com.github.kyuubiran.ezxhelper.utils.newInstanceAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/new-instance-as.html","searchKeys":["newInstanceAs","fun <T> Class<*>.newInstanceAs(args: Args = args(), argTypes: ArgTypes = argTypes()): T?","com.github.kyuubiran.ezxhelper.utils.newInstanceAs"]},{"name":"fun <T> Field.getAs(obj: Any?): T?","description":"com.github.kyuubiran.ezxhelper.utils.getAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-as.html","searchKeys":["getAs","fun <T> Field.getAs(obj: Any?): T?","com.github.kyuubiran.ezxhelper.utils.getAs"]},{"name":"fun <T> Field.getNonNullAs(obj: Any?): T","description":"com.github.kyuubiran.ezxhelper.utils.getNonNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-non-null-as.html","searchKeys":["getNonNullAs","fun <T> Field.getNonNullAs(obj: Any?): T","com.github.kyuubiran.ezxhelper.utils.getNonNullAs"]},{"name":"fun <T> Field.getStaticAs(): T?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-as.html","searchKeys":["getStaticAs","fun <T> Field.getStaticAs(): T?","com.github.kyuubiran.ezxhelper.utils.getStaticAs"]},{"name":"fun <T> Field.getStaticNonNullAs(): T","description":"com.github.kyuubiran.ezxhelper.utils.getStaticNonNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-non-null-as.html","searchKeys":["getStaticNonNullAs","fun <T> Field.getStaticNonNullAs(): T","com.github.kyuubiran.ezxhelper.utils.getStaticNonNullAs"]},{"name":"fun <T> Method.invokeAs(obj: Any?, vararg args: Any?): T?","description":"com.github.kyuubiran.ezxhelper.utils.invokeAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-as.html","searchKeys":["invokeAs","fun <T> Method.invokeAs(obj: Any?, vararg args: Any?): T?","com.github.kyuubiran.ezxhelper.utils.invokeAs"]},{"name":"fun <T> Observe(init: T, onValueChanged: (T) -> Unit? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.Observe","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-observe.html","searchKeys":["Observe","fun <T> Observe(init: T, onValueChanged: (T) -> Unit? = null)","com.github.kyuubiran.ezxhelper.utils.Observe.Observe"]},{"name":"fun <T> fieldCpy(srcObj: T, newObj: T): T?","description":"com.github.kyuubiran.ezxhelper.utils.fieldCpy","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/field-cpy.html","searchKeys":["fieldCpy","fun <T> fieldCpy(srcObj: T, newObj: T): T?","com.github.kyuubiran.ezxhelper.utils.fieldCpy"]},{"name":"fun <T> getStaticObjectAs(field: Field): T","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-as.html","searchKeys":["getStaticObjectAs","fun <T> getStaticObjectAs(field: Field): T","com.github.kyuubiran.ezxhelper.utils.getStaticObjectAs"]},{"name":"fun <T> getStaticObjectOrNullAs(field: Field): T?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-or-null-as.html","searchKeys":["getStaticObjectOrNullAs","fun <T> getStaticObjectOrNullAs(field: Field): T?","com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullAs"]},{"name":"fun Activity.findViewByIdName(name: String): View?","description":"com.github.kyuubiran.ezxhelper.utils.findViewByIdName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-view-by-id-name.html","searchKeys":["findViewByIdName","fun Activity.findViewByIdName(name: String): View?","com.github.kyuubiran.ezxhelper.utils.findViewByIdName"]},{"name":"fun Any.field(fieldName: String, isStatic: Boolean = false, fieldType: Class<*>? = null): Field","description":"com.github.kyuubiran.ezxhelper.utils.field","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/field.html","searchKeys":["field","fun Any.field(fieldName: String, isStatic: Boolean = false, fieldType: Class<*>? = null): Field","com.github.kyuubiran.ezxhelper.utils.field"]},{"name":"fun Any.findFieldObject(findSuper: Boolean = false, condition: FieldCondition): Any","description":"com.github.kyuubiran.ezxhelper.utils.findFieldObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-object.html","searchKeys":["findFieldObject","fun Any.findFieldObject(findSuper: Boolean = false, condition: FieldCondition): Any","com.github.kyuubiran.ezxhelper.utils.findFieldObject"]},{"name":"fun Any.findFieldObjectOrNull(findSuper: Boolean = false, condition: FieldCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldObjectOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-object-or-null.html","searchKeys":["findFieldObjectOrNull","fun Any.findFieldObjectOrNull(findSuper: Boolean = false, condition: FieldCondition): Any?","com.github.kyuubiran.ezxhelper.utils.findFieldObjectOrNull"]},{"name":"fun Any.findObject(condition: ObjectCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.findObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-object.html","searchKeys":["findObject","fun Any.findObject(condition: ObjectCondition): Any?","com.github.kyuubiran.ezxhelper.utils.findObject"]},{"name":"fun Any.findObject(fieldCond: FieldCondition, objCond: ObjectCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.findObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-object.html","searchKeys":["findObject","fun Any.findObject(fieldCond: FieldCondition, objCond: ObjectCondition): Any?","com.github.kyuubiran.ezxhelper.utils.findObject"]},{"name":"fun Any.findStaticObject(fieldCond: FieldCondition, objCond: ObjectCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.findStaticObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-static-object.html","searchKeys":["findStaticObject","fun Any.findStaticObject(fieldCond: FieldCondition, objCond: ObjectCondition): Any?","com.github.kyuubiran.ezxhelper.utils.findStaticObject"]},{"name":"fun Any.getFieldByType(type: Class<*>, isStatic: Boolean = false): Field","description":"com.github.kyuubiran.ezxhelper.utils.getFieldByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-field-by-type.html","searchKeys":["getFieldByType","fun Any.getFieldByType(type: Class<*>, isStatic: Boolean = false): Field","com.github.kyuubiran.ezxhelper.utils.getFieldByType"]},{"name":"fun Any.getObject(objName: String, type: Class<*>? = null): Any","description":"com.github.kyuubiran.ezxhelper.utils.getObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object.html","searchKeys":["getObject","fun Any.getObject(objName: String, type: Class<*>? = null): Any","com.github.kyuubiran.ezxhelper.utils.getObject"]},{"name":"fun Any.getObjectByType(type: Class<*>): Any","description":"com.github.kyuubiran.ezxhelper.utils.getObjectByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-by-type.html","searchKeys":["getObjectByType","fun Any.getObjectByType(type: Class<*>): Any","com.github.kyuubiran.ezxhelper.utils.getObjectByType"]},{"name":"fun Any.getObjectOrNull(field: Field): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null.html","searchKeys":["getObjectOrNull","fun Any.getObjectOrNull(field: Field): Any?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNull"]},{"name":"fun Any.getObjectOrNull(objName: String, type: Class<*>? = null): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null.html","searchKeys":["getObjectOrNull","fun Any.getObjectOrNull(objName: String, type: Class<*>? = null): Any?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNull"]},{"name":"fun Any.getObjectOrNullByType(type: Class<*>): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNullByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null-by-type.html","searchKeys":["getObjectOrNullByType","fun Any.getObjectOrNullByType(type: Class<*>): Any?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNullByType"]},{"name":"fun Any.getStaticFieldByType(type: Class<*>): Field","description":"com.github.kyuubiran.ezxhelper.utils.getStaticFieldByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-field-by-type.html","searchKeys":["getStaticFieldByType","fun Any.getStaticFieldByType(type: Class<*>): Field","com.github.kyuubiran.ezxhelper.utils.getStaticFieldByType"]},{"name":"fun Any.invokeMethod(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): Any?","description":"com.github.kyuubiran.ezxhelper.utils.invokeMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-method.html","searchKeys":["invokeMethod","fun Any.invokeMethod(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): Any?","com.github.kyuubiran.ezxhelper.utils.invokeMethod"]},{"name":"fun Any.invokeMethod(vararg args: Any?, condition: MethodCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.invokeMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-method.html","searchKeys":["invokeMethod","fun Any.invokeMethod(vararg args: Any?, condition: MethodCondition): Any?","com.github.kyuubiran.ezxhelper.utils.invokeMethod"]},{"name":"fun Any.invokeMethodAuto(methodName: String, vararg args: Any?): Any?","description":"com.github.kyuubiran.ezxhelper.utils.invokeMethodAuto","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-method-auto.html","searchKeys":["invokeMethodAuto","fun Any.invokeMethodAuto(methodName: String, vararg args: Any?): Any?","com.github.kyuubiran.ezxhelper.utils.invokeMethodAuto"]},{"name":"fun Any.method(methodName: String, returnType: Class<*>? = null, isStatic: Boolean = false, argTypes: ArgTypes = argTypes()): Method","description":"com.github.kyuubiran.ezxhelper.utils.method","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/method.html","searchKeys":["method","fun Any.method(methodName: String, returnType: Class<*>? = null, isStatic: Boolean = false, argTypes: ArgTypes = argTypes()): Method","com.github.kyuubiran.ezxhelper.utils.method"]},{"name":"fun Any.putObject(field: Field, value: Any?)","description":"com.github.kyuubiran.ezxhelper.utils.putObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/put-object.html","searchKeys":["putObject","fun Any.putObject(field: Field, value: Any?)","com.github.kyuubiran.ezxhelper.utils.putObject"]},{"name":"fun Any.putObject(objName: String, value: Any?, fieldType: Class<*>? = null)","description":"com.github.kyuubiran.ezxhelper.utils.putObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/put-object.html","searchKeys":["putObject","fun Any.putObject(objName: String, value: Any?, fieldType: Class<*>? = null)","com.github.kyuubiran.ezxhelper.utils.putObject"]},{"name":"fun Any.putObjectByType(value: Any?, type: Class<*>)","description":"com.github.kyuubiran.ezxhelper.utils.putObjectByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/put-object-by-type.html","searchKeys":["putObjectByType","fun Any.putObjectByType(value: Any?, type: Class<*>)","com.github.kyuubiran.ezxhelper.utils.putObjectByType"]},{"name":"fun ArgTypes(argTypes: Array<out Class<*>>)","description":"com.github.kyuubiran.ezxhelper.utils.ArgTypes.ArgTypes","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-arg-types/-arg-types.html","searchKeys":["ArgTypes","fun ArgTypes(argTypes: Array<out Class<*>>)","com.github.kyuubiran.ezxhelper.utils.ArgTypes.ArgTypes"]},{"name":"fun Args(args: Array<out Any?>)","description":"com.github.kyuubiran.ezxhelper.utils.Args.Args","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-args/-args.html","searchKeys":["Args","fun Args(args: Array<out Any?>)","com.github.kyuubiran.ezxhelper.utils.Args.Args"]},{"name":"fun Array<Class<*>>.findAllMethods(findSuper: Boolean = false, condition: MethodCondition): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun Array<Class<*>>.findAllMethods(findSuper: Boolean = false, condition: MethodCondition): Array<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun Array<Class<*>>.findMethods(findSuper: Boolean = false, condition: MethodCondition): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-methods.html","searchKeys":["findMethods","fun Array<Class<*>>.findMethods(findSuper: Boolean = false, condition: MethodCondition): Array<Method>","com.github.kyuubiran.ezxhelper.utils.findMethods"]},{"name":"fun Array<Class<*>>.sameAs(vararg other: Any): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.sameAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/same-as.html","searchKeys":["sameAs","fun Array<Class<*>>.sameAs(vararg other: Any): Boolean","com.github.kyuubiran.ezxhelper.utils.sameAs"]},{"name":"fun Array<Constructor<*>>.findConstructor(condition: ConstructorCondition): Constructor<*>","description":"com.github.kyuubiran.ezxhelper.utils.findConstructor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor.html","searchKeys":["findConstructor","fun Array<Constructor<*>>.findConstructor(condition: ConstructorCondition): Constructor<*>","com.github.kyuubiran.ezxhelper.utils.findConstructor"]},{"name":"fun Array<Constructor<*>>.findConstructorOrNull(condition: ConstructorCondition): Constructor<*>?","description":"com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor-or-null.html","searchKeys":["findConstructorOrNull","fun Array<Constructor<*>>.findConstructorOrNull(condition: ConstructorCondition): Constructor<*>?","com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull"]},{"name":"fun Array<Constructor<*>>.hookAfter(hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Array<Constructor<*>>.hookAfter(hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Array<Constructor<*>>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Array<Constructor<*>>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Array<Constructor<*>>.hookBefore(hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Array<Constructor<*>>.hookBefore(hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Array<Constructor<*>>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Array<Constructor<*>>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Array<Constructor<*>>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: XposedHookFactory.() -> Unit): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Array<Constructor<*>>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: XposedHookFactory.() -> Unit): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Array<Constructor<*>>.hookReplace(hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Array<Constructor<*>>.hookReplace(hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Array<Constructor<*>>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Array<Constructor<*>>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Array<Constructor<*>>.hookReturnConstant(obj: Any?): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Array<Constructor<*>>.hookReturnConstant(obj: Any?): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Array<Constructor<*>>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Array<Constructor<*>>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Array<Field>.findAllFields(condition: FieldCondition): Array<Field>","description":"com.github.kyuubiran.ezxhelper.utils.findAllFields","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-fields.html","searchKeys":["findAllFields","fun Array<Field>.findAllFields(condition: FieldCondition): Array<Field>","com.github.kyuubiran.ezxhelper.utils.findAllFields"]},{"name":"fun Array<Field>.findField(condition: FieldCondition): Field","description":"com.github.kyuubiran.ezxhelper.utils.findField","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field.html","searchKeys":["findField","fun Array<Field>.findField(condition: FieldCondition): Field","com.github.kyuubiran.ezxhelper.utils.findField"]},{"name":"fun Array<Field>.findFieldOrNull(condition: FieldCondition): Field?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-or-null.html","searchKeys":["findFieldOrNull","fun Array<Field>.findFieldOrNull(condition: FieldCondition): Field?","com.github.kyuubiran.ezxhelper.utils.findFieldOrNull"]},{"name":"fun Array<Method>.findAllMethods(condition: MethodCondition): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun Array<Method>.findAllMethods(condition: MethodCondition): Array<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun Array<Method>.findMethod(condition: MethodCondition): Method","description":"com.github.kyuubiran.ezxhelper.utils.findMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method.html","searchKeys":["findMethod","fun Array<Method>.findMethod(condition: MethodCondition): Method","com.github.kyuubiran.ezxhelper.utils.findMethod"]},{"name":"fun Array<Method>.findMethodOrNull(condition: MethodCondition): Method?","description":"com.github.kyuubiran.ezxhelper.utils.findMethodOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method-or-null.html","searchKeys":["findMethodOrNull","fun Array<Method>.findMethodOrNull(condition: MethodCondition): Method?","com.github.kyuubiran.ezxhelper.utils.findMethodOrNull"]},{"name":"fun Array<Method>.hookAfter(hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Array<Method>.hookAfter(hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Array<Method>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Array<Method>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Array<Method>.hookBefore(hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Array<Method>.hookBefore(hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Array<Method>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Array<Method>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Array<Method>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Array<Method>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Array<Method>.hookReplace(hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Array<Method>.hookReplace(hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Array<Method>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Array<Method>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Array<Method>.hookReturnConstant(obj: Any?): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Array<Method>.hookReturnConstant(obj: Any?): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Array<Method>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Array<Method>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Array<Pair<Class<*>, MethodCondition>>.findAllMethods(findSuper: Boolean = false): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun Array<Pair<Class<*>, MethodCondition>>.findAllMethods(findSuper: Boolean = false): Array<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun Array<Pair<Class<*>, MethodCondition>>.findMethods(findSuper: Boolean = false): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-methods.html","searchKeys":["findMethods","fun Array<Pair<Class<*>, MethodCondition>>.findMethods(findSuper: Boolean = false): Array<Method>","com.github.kyuubiran.ezxhelper.utils.findMethods"]},{"name":"fun Array<Pair<String, MethodCondition>>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-all-methods.html","searchKeys":["loadAndFindAllMethods","fun Array<Pair<String, MethodCondition>>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): Array<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods"]},{"name":"fun Array<Pair<String, MethodCondition>>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-methods.html","searchKeys":["loadAndFindMethods","fun Array<Pair<String, MethodCondition>>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): Array<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods"]},{"name":"fun Array<String>.loadAllClasses(clzLoader: ClassLoader = InitFields.ezXClassLoader): Array<Class<*>>","description":"com.github.kyuubiran.ezxhelper.utils.loadAllClasses","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-all-classes.html","searchKeys":["loadAllClasses","fun Array<String>.loadAllClasses(clzLoader: ClassLoader = InitFields.ezXClassLoader): Array<Class<*>>","com.github.kyuubiran.ezxhelper.utils.loadAllClasses"]},{"name":"fun Array<String>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-all-methods.html","searchKeys":["loadAndFindAllMethods","fun Array<String>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Array<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods"]},{"name":"fun Array<String>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Array<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-methods.html","searchKeys":["loadAndFindMethods","fun Array<String>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Array<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods"]},{"name":"fun Array<String>.loadClassAny(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","description":"com.github.kyuubiran.ezxhelper.utils.loadClassAny","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-any.html","searchKeys":["loadClassAny","fun Array<String>.loadClassAny(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","com.github.kyuubiran.ezxhelper.utils.loadClassAny"]},{"name":"fun Array<String>.loadClassAnyOrNull(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","description":"com.github.kyuubiran.ezxhelper.utils.loadClassAnyOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-any-or-null.html","searchKeys":["loadClassAnyOrNull","fun Array<String>.loadClassAnyOrNull(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","com.github.kyuubiran.ezxhelper.utils.loadClassAnyOrNull"]},{"name":"fun Array<String>.loadClassesIfExists(clzLoader: ClassLoader = InitFields.ezXClassLoader): Array<Class<*>>","description":"com.github.kyuubiran.ezxhelper.utils.loadClassesIfExists","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-classes-if-exists.html","searchKeys":["loadClassesIfExists","fun Array<String>.loadClassesIfExists(clzLoader: ClassLoader = InitFields.ezXClassLoader): Array<Class<*>>","com.github.kyuubiran.ezxhelper.utils.loadClassesIfExists"]},{"name":"fun Array<XC_MethodHook.Unhook>.unhookAll()","description":"com.github.kyuubiran.ezxhelper.utils.unhookAll","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/unhook-all.html","searchKeys":["unhookAll","fun Array<XC_MethodHook.Unhook>.unhookAll()","com.github.kyuubiran.ezxhelper.utils.unhookAll"]},{"name":"fun Class<*>.findStaticObject(condition: ObjectCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.findStaticObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-static-object.html","searchKeys":["findStaticObject","fun Class<*>.findStaticObject(condition: ObjectCondition): Any?","com.github.kyuubiran.ezxhelper.utils.findStaticObject"]},{"name":"fun Class<*>.getStaticObject(objName: String, type: Class<*>? = null): Any","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object.html","searchKeys":["getStaticObject","fun Class<*>.getStaticObject(objName: String, type: Class<*>? = null): Any","com.github.kyuubiran.ezxhelper.utils.getStaticObject"]},{"name":"fun Class<*>.getStaticObjectByType(type: Class<*>): Any","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-by-type.html","searchKeys":["getStaticObjectByType","fun Class<*>.getStaticObjectByType(type: Class<*>): Any","com.github.kyuubiran.ezxhelper.utils.getStaticObjectByType"]},{"name":"fun Class<*>.getStaticObjectOrNull(objName: String, type: Class<*>? = null): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-or-null.html","searchKeys":["getStaticObjectOrNull","fun Class<*>.getStaticObjectOrNull(objName: String, type: Class<*>? = null): Any?","com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNull"]},{"name":"fun Class<*>.getStaticObjectOrNullByType(type: Class<*>): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-or-null-by-type.html","searchKeys":["getStaticObjectOrNullByType","fun Class<*>.getStaticObjectOrNullByType(type: Class<*>): Any?","com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNullByType"]},{"name":"fun Class<*>.hookAllConstructorAfter(hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-after.html","searchKeys":["hookAllConstructorAfter","fun Class<*>.hookAllConstructorAfter(hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorAfter"]},{"name":"fun Class<*>.hookAllConstructorAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-after.html","searchKeys":["hookAllConstructorAfter","fun Class<*>.hookAllConstructorAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorAfter"]},{"name":"fun Class<*>.hookAllConstructorBefore(hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-before.html","searchKeys":["hookAllConstructorBefore","fun Class<*>.hookAllConstructorBefore(hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorBefore"]},{"name":"fun Class<*>.hookAllConstructorBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-before.html","searchKeys":["hookAllConstructorBefore","fun Class<*>.hookAllConstructorBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorBefore"]},{"name":"fun Class<*>.hookAllConstructorReplace(hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-replace.html","searchKeys":["hookAllConstructorReplace","fun Class<*>.hookAllConstructorReplace(hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorReplace"]},{"name":"fun Class<*>.hookAllConstructorReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-replace.html","searchKeys":["hookAllConstructorReplace","fun Class<*>.hookAllConstructorReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorReplace"]},{"name":"fun Class<*>.invokeStaticMethod(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): Any?","description":"com.github.kyuubiran.ezxhelper.utils.invokeStaticMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-static-method.html","searchKeys":["invokeStaticMethod","fun Class<*>.invokeStaticMethod(methodName: String, args: Args = args(), argTypes: ArgTypes = argTypes(), returnType: Class<*>? = null): Any?","com.github.kyuubiran.ezxhelper.utils.invokeStaticMethod"]},{"name":"fun Class<*>.invokeStaticMethod(vararg args: Any?, condition: MethodCondition): Any?","description":"com.github.kyuubiran.ezxhelper.utils.invokeStaticMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-static-method.html","searchKeys":["invokeStaticMethod","fun Class<*>.invokeStaticMethod(vararg args: Any?, condition: MethodCondition): Any?","com.github.kyuubiran.ezxhelper.utils.invokeStaticMethod"]},{"name":"fun Class<*>.invokeStaticMethodAuto(methodName: String, vararg args: Any?): Any?","description":"com.github.kyuubiran.ezxhelper.utils.invokeStaticMethodAuto","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/invoke-static-method-auto.html","searchKeys":["invokeStaticMethodAuto","fun Class<*>.invokeStaticMethodAuto(methodName: String, vararg args: Any?): Any?","com.github.kyuubiran.ezxhelper.utils.invokeStaticMethodAuto"]},{"name":"fun Class<*>.isChildClassOf(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isChildClassOf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-child-class-of.html","searchKeys":["isChildClassOf","fun Class<*>.isChildClassOf(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Boolean","com.github.kyuubiran.ezxhelper.utils.isChildClassOf"]},{"name":"fun Class<*>.newInstance(args: Args = args(), argTypes: ArgTypes = argTypes()): Any?","description":"com.github.kyuubiran.ezxhelper.utils.newInstance","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/new-instance.html","searchKeys":["newInstance","fun Class<*>.newInstance(args: Args = args(), argTypes: ArgTypes = argTypes()): Any?","com.github.kyuubiran.ezxhelper.utils.newInstance"]},{"name":"fun Class<*>.putStaticObject(objName: String, value: Any?, fieldType: Class<*>? = null)","description":"com.github.kyuubiran.ezxhelper.utils.putStaticObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/put-static-object.html","searchKeys":["putStaticObject","fun Class<*>.putStaticObject(objName: String, value: Any?, fieldType: Class<*>? = null)","com.github.kyuubiran.ezxhelper.utils.putStaticObject"]},{"name":"fun Class<*>.putStaticObjectByType(value: Any?, type: Class<*>)","description":"com.github.kyuubiran.ezxhelper.utils.putStaticObjectByType","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/put-static-object-by-type.html","searchKeys":["putStaticObjectByType","fun Class<*>.putStaticObjectByType(value: Any?, type: Class<*>)","com.github.kyuubiran.ezxhelper.utils.putStaticObjectByType"]},{"name":"fun Class<*>.staticField(fieldName: String, type: Class<*>? = null): Field","description":"com.github.kyuubiran.ezxhelper.utils.staticField","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/static-field.html","searchKeys":["staticField","fun Class<*>.staticField(fieldName: String, type: Class<*>? = null): Field","com.github.kyuubiran.ezxhelper.utils.staticField"]},{"name":"fun Class<*>.staticMethod(methodName: String, returnType: Class<*>? = null, argTypes: ArgTypes = argTypes()): Method","description":"com.github.kyuubiran.ezxhelper.utils.staticMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/static-method.html","searchKeys":["staticMethod","fun Class<*>.staticMethod(methodName: String, returnType: Class<*>? = null, argTypes: ArgTypes = argTypes()): Method","com.github.kyuubiran.ezxhelper.utils.staticMethod"]},{"name":"fun ClassLoader.getAllClassesList(delegator: (BaseDexClassLoader) -> BaseDexClassLoader = { loader -> loader }): List<String>","description":"com.github.kyuubiran.ezxhelper.utils.getAllClassesList","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-all-classes-list.html","searchKeys":["getAllClassesList","fun ClassLoader.getAllClassesList(delegator: (BaseDexClassLoader) -> BaseDexClassLoader = { loader -> loader }): List<String>","com.github.kyuubiran.ezxhelper.utils.getAllClassesList"]},{"name":"fun ClassLoader.getFieldByDesc(desc: String): Field","description":"com.github.kyuubiran.ezxhelper.utils.getFieldByDesc","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-field-by-desc.html","searchKeys":["getFieldByDesc","fun ClassLoader.getFieldByDesc(desc: String): Field","com.github.kyuubiran.ezxhelper.utils.getFieldByDesc"]},{"name":"fun ClassLoader.getFieldByDescOrNull(desc: String): Field?","description":"com.github.kyuubiran.ezxhelper.utils.getFieldByDescOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-field-by-desc-or-null.html","searchKeys":["getFieldByDescOrNull","fun ClassLoader.getFieldByDescOrNull(desc: String): Field?","com.github.kyuubiran.ezxhelper.utils.getFieldByDescOrNull"]},{"name":"fun ClassLoader.getMethodByDesc(desc: String): Method","description":"com.github.kyuubiran.ezxhelper.utils.getMethodByDesc","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-method-by-desc.html","searchKeys":["getMethodByDesc","fun ClassLoader.getMethodByDesc(desc: String): Method","com.github.kyuubiran.ezxhelper.utils.getMethodByDesc"]},{"name":"fun ClassLoader.getMethodByDescOrNull(desc: String): Method?","description":"com.github.kyuubiran.ezxhelper.utils.getMethodByDescOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-method-by-desc-or-null.html","searchKeys":["getMethodByDescOrNull","fun ClassLoader.getMethodByDescOrNull(desc: String): Method?","com.github.kyuubiran.ezxhelper.utils.getMethodByDescOrNull"]},{"name":"fun Constructor<*>.hookAfter(hooker: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Constructor<*>.hookAfter(hooker: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Constructor<*>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Constructor<*>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Constructor<*>.hookBefore(hooker: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Constructor<*>.hookBefore(hooker: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Constructor<*>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hook: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Constructor<*>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hook: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Constructor<*>.hookMethod(hookCallback: XC_MethodHook): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Constructor<*>.hookMethod(hookCallback: XC_MethodHook): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Constructor<*>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Constructor<*>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Constructor<*>.hookReplace(hooker: ReplaceHooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Constructor<*>.hookReplace(hooker: ReplaceHooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Constructor<*>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Constructor<*>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Constructor<*>.hookReturnConstant(obj: Any?): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Constructor<*>.hookReturnConstant(obj: Any?): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Constructor<*>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Constructor<*>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Context.addModuleAssetPath()","description":"com.github.kyuubiran.ezxhelper.utils.addModuleAssetPath","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/add-module-asset-path.html","searchKeys":["addModuleAssetPath","fun Context.addModuleAssetPath()","com.github.kyuubiran.ezxhelper.utils.addModuleAssetPath"]},{"name":"fun Context.showToast(msg: String, length: Int = Toast.LENGTH_SHORT)","description":"com.github.kyuubiran.ezxhelper.utils.showToast","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/show-toast.html","searchKeys":["showToast","fun Context.showToast(msg: String, length: Int = Toast.LENGTH_SHORT)","com.github.kyuubiran.ezxhelper.utils.showToast"]},{"name":"fun Context.showToast(msg: String, vararg args: Any?, length: Int = Toast.LENGTH_SHORT)","description":"com.github.kyuubiran.ezxhelper.utils.showToast","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/show-toast.html","searchKeys":["showToast","fun Context.showToast(msg: String, vararg args: Any?, length: Int = Toast.LENGTH_SHORT)","com.github.kyuubiran.ezxhelper.utils.showToast"]},{"name":"fun Field.getNonNull(obj: Any?): Any","description":"com.github.kyuubiran.ezxhelper.utils.getNonNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-non-null.html","searchKeys":["getNonNull","fun Field.getNonNull(obj: Any?): Any","com.github.kyuubiran.ezxhelper.utils.getNonNull"]},{"name":"fun Field.getStatic(): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getStatic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static.html","searchKeys":["getStatic","fun Field.getStatic(): Any?","com.github.kyuubiran.ezxhelper.utils.getStatic"]},{"name":"fun Field.getStaticNonNull(): Any","description":"com.github.kyuubiran.ezxhelper.utils.getStaticNonNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-non-null.html","searchKeys":["getStaticNonNull","fun Field.getStaticNonNull(): Any","com.github.kyuubiran.ezxhelper.utils.getStaticNonNull"]},{"name":"fun FixedClassLoader(mModuleClassLoader: ClassLoader, mHostClassLoader: ClassLoader)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.FixedClassLoader.FixedClassLoader","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-fixed-class-loader/-fixed-class-loader.html","searchKeys":["FixedClassLoader","fun FixedClassLoader(mModuleClassLoader: ClassLoader, mHostClassLoader: ClassLoader)","com.github.kyuubiran.ezxhelper.utils.parasitics.FixedClassLoader.FixedClassLoader"]},{"name":"fun IActivityManagerHandler(mOrigin: Any)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.IActivityManagerHandler.IActivityManagerHandler","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-i-activity-manager-handler/-i-activity-manager-handler.html","searchKeys":["IActivityManagerHandler","fun IActivityManagerHandler(mOrigin: Any)","com.github.kyuubiran.ezxhelper.utils.parasitics.IActivityManagerHandler.IActivityManagerHandler"]},{"name":"fun Iterable<Class<*>>.findAllMethods(findSuper: Boolean = false, condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun Iterable<Class<*>>.findAllMethods(findSuper: Boolean = false, condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun Iterable<Class<*>>.findMethods(findSuper: Boolean = false, condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-methods.html","searchKeys":["findMethods","fun Iterable<Class<*>>.findMethods(findSuper: Boolean = false, condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.findMethods"]},{"name":"fun Iterable<Constructor<*>>.findConstructor(condition: ConstructorCondition): Constructor<*>","description":"com.github.kyuubiran.ezxhelper.utils.findConstructor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor.html","searchKeys":["findConstructor","fun Iterable<Constructor<*>>.findConstructor(condition: ConstructorCondition): Constructor<*>","com.github.kyuubiran.ezxhelper.utils.findConstructor"]},{"name":"fun Iterable<Constructor<*>>.findConstructorOrNull(condition: ConstructorCondition): Constructor<*>?","description":"com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor-or-null.html","searchKeys":["findConstructorOrNull","fun Iterable<Constructor<*>>.findConstructorOrNull(condition: ConstructorCondition): Constructor<*>?","com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull"]},{"name":"fun Iterable<Constructor<*>>.hookAfter(hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Iterable<Constructor<*>>.hookAfter(hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Iterable<Constructor<*>>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Iterable<Constructor<*>>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Iterable<Constructor<*>>.hookBefore(hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Iterable<Constructor<*>>.hookBefore(hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Iterable<Constructor<*>>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Iterable<Constructor<*>>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Iterable<Constructor<*>>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: XposedHookFactory.() -> Unit): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Iterable<Constructor<*>>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: XposedHookFactory.() -> Unit): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Iterable<Constructor<*>>.hookReplace(hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Iterable<Constructor<*>>.hookReplace(hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Iterable<Constructor<*>>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Iterable<Constructor<*>>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Iterable<Field>.findAllFields(condition: FieldCondition): List<Field>","description":"com.github.kyuubiran.ezxhelper.utils.findAllFields","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-fields.html","searchKeys":["findAllFields","fun Iterable<Field>.findAllFields(condition: FieldCondition): List<Field>","com.github.kyuubiran.ezxhelper.utils.findAllFields"]},{"name":"fun Iterable<Field>.findField(condition: FieldCondition): Field","description":"com.github.kyuubiran.ezxhelper.utils.findField","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field.html","searchKeys":["findField","fun Iterable<Field>.findField(condition: FieldCondition): Field","com.github.kyuubiran.ezxhelper.utils.findField"]},{"name":"fun Iterable<Field>.findFieldOrNull(condition: FieldCondition): Field?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-or-null.html","searchKeys":["findFieldOrNull","fun Iterable<Field>.findFieldOrNull(condition: FieldCondition): Field?","com.github.kyuubiran.ezxhelper.utils.findFieldOrNull"]},{"name":"fun Iterable<Method>.findAllMethods(condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun Iterable<Method>.findAllMethods(condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun Iterable<Method>.findMethod(condition: MethodCondition): Method","description":"com.github.kyuubiran.ezxhelper.utils.findMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method.html","searchKeys":["findMethod","fun Iterable<Method>.findMethod(condition: MethodCondition): Method","com.github.kyuubiran.ezxhelper.utils.findMethod"]},{"name":"fun Iterable<Method>.findMethodOrNull(condition: MethodCondition): Method?","description":"com.github.kyuubiran.ezxhelper.utils.findMethodOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method-or-null.html","searchKeys":["findMethodOrNull","fun Iterable<Method>.findMethodOrNull(condition: MethodCondition): Method?","com.github.kyuubiran.ezxhelper.utils.findMethodOrNull"]},{"name":"fun Iterable<Method>.hookAfter(hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Iterable<Method>.hookAfter(hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Iterable<Method>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Iterable<Method>.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Iterable<Method>.hookBefore(hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Iterable<Method>.hookBefore(hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Iterable<Method>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Iterable<Method>.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Iterable<Method>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Iterable<Method>.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Iterable<Method>.hookReplace(hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Iterable<Method>.hookReplace(hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Iterable<Method>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Iterable<Method>.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: ReplaceHooker): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Iterable<Pair<Class<*>, MethodCondition>>.findAllMethods(findSuper: Boolean = false): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun Iterable<Pair<Class<*>, MethodCondition>>.findAllMethods(findSuper: Boolean = false): List<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun Iterable<Pair<Class<*>, MethodCondition>>.findMethods(findSuper: Boolean = false): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-methods.html","searchKeys":["findMethods","fun Iterable<Pair<Class<*>, MethodCondition>>.findMethods(findSuper: Boolean = false): List<Method>","com.github.kyuubiran.ezxhelper.utils.findMethods"]},{"name":"fun Iterable<Pair<String, MethodCondition>>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-all-methods.html","searchKeys":["loadAndFindAllMethods","fun Iterable<Pair<String, MethodCondition>>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): List<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods"]},{"name":"fun Iterable<Pair<String, MethodCondition>>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-methods.html","searchKeys":["loadAndFindMethods","fun Iterable<Pair<String, MethodCondition>>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false): List<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods"]},{"name":"fun Iterable<String>.loadAllClasses(clzLoader: ClassLoader = InitFields.ezXClassLoader): List<Class<*>>","description":"com.github.kyuubiran.ezxhelper.utils.loadAllClasses","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-all-classes.html","searchKeys":["loadAllClasses","fun Iterable<String>.loadAllClasses(clzLoader: ClassLoader = InitFields.ezXClassLoader): List<Class<*>>","com.github.kyuubiran.ezxhelper.utils.loadAllClasses"]},{"name":"fun Iterable<String>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-all-methods.html","searchKeys":["loadAndFindAllMethods","fun Iterable<String>.loadAndFindAllMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindAllMethods"]},{"name":"fun Iterable<String>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-and-find-methods.html","searchKeys":["loadAndFindMethods","fun Iterable<String>.loadAndFindMethods(classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.loadAndFindMethods"]},{"name":"fun Iterable<String>.loadClassAny(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","description":"com.github.kyuubiran.ezxhelper.utils.loadClassAny","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-any.html","searchKeys":["loadClassAny","fun Iterable<String>.loadClassAny(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","com.github.kyuubiran.ezxhelper.utils.loadClassAny"]},{"name":"fun Iterable<String>.loadClassAnyOrNull(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","description":"com.github.kyuubiran.ezxhelper.utils.loadClassAnyOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-any-or-null.html","searchKeys":["loadClassAnyOrNull","fun Iterable<String>.loadClassAnyOrNull(clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","com.github.kyuubiran.ezxhelper.utils.loadClassAnyOrNull"]},{"name":"fun Iterable<String>.loadClassesIfExists(clzLoader: ClassLoader = InitFields.ezXClassLoader): List<Class<*>>","description":"com.github.kyuubiran.ezxhelper.utils.loadClassesIfExists","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-classes-if-exists.html","searchKeys":["loadClassesIfExists","fun Iterable<String>.loadClassesIfExists(clzLoader: ClassLoader = InitFields.ezXClassLoader): List<Class<*>>","com.github.kyuubiran.ezxhelper.utils.loadClassesIfExists"]},{"name":"fun Iterable<XC_MethodHook.Unhook>.unhookAll()","description":"com.github.kyuubiran.ezxhelper.utils.unhookAll","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/unhook-all.html","searchKeys":["unhookAll","fun Iterable<XC_MethodHook.Unhook>.unhookAll()","com.github.kyuubiran.ezxhelper.utils.unhookAll"]},{"name":"fun JSONObject.getBooleanOrDefault(key: String, defValue: Boolean = false): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.getBooleanOrDefault","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-boolean-or-default.html","searchKeys":["getBooleanOrDefault","fun JSONObject.getBooleanOrDefault(key: String, defValue: Boolean = false): Boolean","com.github.kyuubiran.ezxhelper.utils.getBooleanOrDefault"]},{"name":"fun JSONObject.getBooleanOrNull(key: String): Boolean?","description":"com.github.kyuubiran.ezxhelper.utils.getBooleanOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-boolean-or-null.html","searchKeys":["getBooleanOrNull","fun JSONObject.getBooleanOrNull(key: String): Boolean?","com.github.kyuubiran.ezxhelper.utils.getBooleanOrNull"]},{"name":"fun JSONObject.getIntOrDefault(key: String, defValue: Int = 0): Int","description":"com.github.kyuubiran.ezxhelper.utils.getIntOrDefault","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-int-or-default.html","searchKeys":["getIntOrDefault","fun JSONObject.getIntOrDefault(key: String, defValue: Int = 0): Int","com.github.kyuubiran.ezxhelper.utils.getIntOrDefault"]},{"name":"fun JSONObject.getIntOrNull(key: String): Int?","description":"com.github.kyuubiran.ezxhelper.utils.getIntOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-int-or-null.html","searchKeys":["getIntOrNull","fun JSONObject.getIntOrNull(key: String): Int?","com.github.kyuubiran.ezxhelper.utils.getIntOrNull"]},{"name":"fun JSONObject.getJSONArrayOrEmpty(key: String): JSONArray","description":"com.github.kyuubiran.ezxhelper.utils.getJSONArrayOrEmpty","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-j-s-o-n-array-or-empty.html","searchKeys":["getJSONArrayOrEmpty","fun JSONObject.getJSONArrayOrEmpty(key: String): JSONArray","com.github.kyuubiran.ezxhelper.utils.getJSONArrayOrEmpty"]},{"name":"fun JSONObject.getJSONArrayOrNull(key: String): JSONArray?","description":"com.github.kyuubiran.ezxhelper.utils.getJSONArrayOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-j-s-o-n-array-or-null.html","searchKeys":["getJSONArrayOrNull","fun JSONObject.getJSONArrayOrNull(key: String): JSONArray?","com.github.kyuubiran.ezxhelper.utils.getJSONArrayOrNull"]},{"name":"fun JSONObject.getLongOrDefault(key: String, defValue: Long = 0): Long","description":"com.github.kyuubiran.ezxhelper.utils.getLongOrDefault","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-long-or-default.html","searchKeys":["getLongOrDefault","fun JSONObject.getLongOrDefault(key: String, defValue: Long = 0): Long","com.github.kyuubiran.ezxhelper.utils.getLongOrDefault"]},{"name":"fun JSONObject.getLongOrNull(key: String): Long?","description":"com.github.kyuubiran.ezxhelper.utils.getLongOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-long-or-null.html","searchKeys":["getLongOrNull","fun JSONObject.getLongOrNull(key: String): Long?","com.github.kyuubiran.ezxhelper.utils.getLongOrNull"]},{"name":"fun JSONObject.getObjectOrNull(key: String): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getObjectOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-object-or-null.html","searchKeys":["getObjectOrNull","fun JSONObject.getObjectOrNull(key: String): Any?","com.github.kyuubiran.ezxhelper.utils.getObjectOrNull"]},{"name":"fun JSONObject.getStringOrDefault(key: String, defValue: String = \"\"): String","description":"com.github.kyuubiran.ezxhelper.utils.getStringOrDefault","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-string-or-default.html","searchKeys":["getStringOrDefault","fun JSONObject.getStringOrDefault(key: String, defValue: String = \"\"): String","com.github.kyuubiran.ezxhelper.utils.getStringOrDefault"]},{"name":"fun JSONObject.getStringOrNull(key: String): String?","description":"com.github.kyuubiran.ezxhelper.utils.getStringOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-string-or-null.html","searchKeys":["getStringOrNull","fun JSONObject.getStringOrNull(key: String): String?","com.github.kyuubiran.ezxhelper.utils.getStringOrNull"]},{"name":"fun List<Class<*>>.sameAs(vararg other: Any): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.sameAs","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/same-as.html","searchKeys":["sameAs","fun List<Class<*>>.sameAs(vararg other: Any): Boolean","com.github.kyuubiran.ezxhelper.utils.sameAs"]},{"name":"fun List<Constructor<*>>.hookReturnConstant(obj: Any?): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun List<Constructor<*>>.hookReturnConstant(obj: Any?): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun List<Constructor<*>>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun List<Constructor<*>>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun List<Method>.hookReturnConstant(obj: Any?): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun List<Method>.hookReturnConstant(obj: Any?): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun List<Method>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): List<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun List<Method>.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): List<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Logger()","description":"com.github.kyuubiran.ezxhelper.utils.Logger.Logger","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-logger.html","searchKeys":["Logger","fun Logger()","com.github.kyuubiran.ezxhelper.utils.Logger.Logger"]},{"name":"fun Method.hookAfter(hooker: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Method.hookAfter(hooker: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Method.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-after.html","searchKeys":["hookAfter","fun Method.hookAfter(priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookAfter"]},{"name":"fun Method.hookBefore(hooker: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Method.hookBefore(hooker: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Method.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hook: Hooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-before.html","searchKeys":["hookBefore","fun Method.hookBefore(priority: Int = XCallback.PRIORITY_DEFAULT, hook: Hooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookBefore"]},{"name":"fun Method.hookMethod(hookCallback: XC_MethodHook): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Method.hookMethod(hookCallback: XC_MethodHook): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Method.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-method.html","searchKeys":["hookMethod","fun Method.hookMethod(priority: Int = XCallback.PRIORITY_DEFAULT, hook: XposedHookFactory.() -> Unit): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookMethod"]},{"name":"fun Method.hookReplace(hooker: ReplaceHooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Method.hookReplace(hooker: ReplaceHooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Method.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hook: ReplaceHooker): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-replace.html","searchKeys":["hookReplace","fun Method.hookReplace(priority: Int = XCallback.PRIORITY_DEFAULT, hook: ReplaceHooker): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReplace"]},{"name":"fun Method.hookReturnConstant(obj: Any?): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Method.hookReturnConstant(obj: Any?): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun Method.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): XC_MethodHook.Unhook","description":"com.github.kyuubiran.ezxhelper.utils.hookReturnConstant","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-return-constant.html","searchKeys":["hookReturnConstant","fun Method.hookReturnConstant(priority: Int = XCallback.PRIORITY_DEFAULT, obj: Any?): XC_MethodHook.Unhook","com.github.kyuubiran.ezxhelper.utils.hookReturnConstant"]},{"name":"fun MyHandler(mDefault: Handler.Callback?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyHandler.MyHandler","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-handler/-my-handler.html","searchKeys":["MyHandler","fun MyHandler(mDefault: Handler.Callback?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyHandler.MyHandler"]},{"name":"fun MyInstrumentation(mBase: Instrumentation)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.MyInstrumentation","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/-my-instrumentation.html","searchKeys":["MyInstrumentation","fun MyInstrumentation(mBase: Instrumentation)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.MyInstrumentation"]},{"name":"fun Resources.addModuleAssetPath()","description":"com.github.kyuubiran.ezxhelper.utils.addModuleAssetPath","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/add-module-asset-path.html","searchKeys":["addModuleAssetPath","fun Resources.addModuleAssetPath()","com.github.kyuubiran.ezxhelper.utils.addModuleAssetPath"]},{"name":"fun Runnable.postOnMainThread()","description":"com.github.kyuubiran.ezxhelper.utils.postOnMainThread","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/post-on-main-thread.html","searchKeys":["postOnMainThread","fun Runnable.postOnMainThread()","com.github.kyuubiran.ezxhelper.utils.postOnMainThread"]},{"name":"fun TransferActivity()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.TransferActivity.TransferActivity","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-transfer-activity/-transfer-activity.html","searchKeys":["TransferActivity","fun TransferActivity()","com.github.kyuubiran.ezxhelper.utils.parasitics.TransferActivity.TransferActivity"]},{"name":"fun ValueChangedEvent()","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.ValueChangedEvent","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/-value-changed-event.html","searchKeys":["ValueChangedEvent","fun ValueChangedEvent()","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.ValueChangedEvent"]},{"name":"fun View.findViewByIdName(name: String): View?","description":"com.github.kyuubiran.ezxhelper.utils.findViewByIdName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-view-by-id-name.html","searchKeys":["findViewByIdName","fun View.findViewByIdName(name: String): View?","com.github.kyuubiran.ezxhelper.utils.findViewByIdName"]},{"name":"fun View.setViewZeroSize()","description":"com.github.kyuubiran.ezxhelper.utils.setViewZeroSize","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/set-view-zero-size.html","searchKeys":["setViewZeroSize","fun View.setViewZeroSize()","com.github.kyuubiran.ezxhelper.utils.setViewZeroSize"]},{"name":"fun ViewGroup.findAllViewsByCondition(condition: (view: View) -> Boolean): List<View>","description":"com.github.kyuubiran.ezxhelper.utils.findAllViewsByCondition","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-views-by-condition.html","searchKeys":["findAllViewsByCondition","fun ViewGroup.findAllViewsByCondition(condition: (view: View) -> Boolean): List<View>","com.github.kyuubiran.ezxhelper.utils.findAllViewsByCondition"]},{"name":"fun ViewGroup.findViewByCondition(condition: (view: View) -> Boolean): View?","description":"com.github.kyuubiran.ezxhelper.utils.findViewByCondition","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-view-by-condition.html","searchKeys":["findViewByCondition","fun ViewGroup.findViewByCondition(condition: (view: View) -> Boolean): View?","com.github.kyuubiran.ezxhelper.utils.findViewByCondition"]},{"name":"fun ViewGroup.isEmpty(): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isEmpty","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-empty.html","searchKeys":["isEmpty","fun ViewGroup.isEmpty(): Boolean","com.github.kyuubiran.ezxhelper.utils.isEmpty"]},{"name":"fun ViewGroup.isNotEmpty(): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotEmpty","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-empty.html","searchKeys":["isNotEmpty","fun ViewGroup.isNotEmpty(): Boolean","com.github.kyuubiran.ezxhelper.utils.isNotEmpty"]},{"name":"fun XposedHookFactory(priority: Int = XCallback.PRIORITY_DEFAULT)","description":"com.github.kyuubiran.ezxhelper.utils.XposedHookFactory.XposedHookFactory","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-xposed-hook-factory/-xposed-hook-factory.html","searchKeys":["XposedHookFactory","fun XposedHookFactory(priority: Int = XCallback.PRIORITY_DEFAULT)","com.github.kyuubiran.ezxhelper.utils.XposedHookFactory.XposedHookFactory"]},{"name":"fun add(listener: (T) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.add","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/add.html","searchKeys":["add","fun add(listener: (T) -> Unit)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.add"]},{"name":"fun addAll(listeners: Array<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.addAll","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/add-all.html","searchKeys":["addAll","fun addAll(listeners: Array<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.addAll"]},{"name":"fun addAll(listeners: Collection<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.addAll","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/add-all.html","searchKeys":["addAll","fun addAll(listeners: Collection<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.addAll"]},{"name":"fun addModuleAssetPath(context: Context)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.addModuleAssetPath","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/add-module-asset-path.html","searchKeys":["addModuleAssetPath","fun addModuleAssetPath(context: Context)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.addModuleAssetPath"]},{"name":"fun addModuleAssetPath(resources: Resources)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.addModuleAssetPath","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/add-module-asset-path.html","searchKeys":["addModuleAssetPath","fun addModuleAssetPath(resources: Resources)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.addModuleAssetPath"]},{"name":"fun after(after: Hooker)","description":"com.github.kyuubiran.ezxhelper.utils.XposedHookFactory.after","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-xposed-hook-factory/after.html","searchKeys":["after","fun after(after: Hooker)","com.github.kyuubiran.ezxhelper.utils.XposedHookFactory.after"]},{"name":"fun before(before: Hooker)","description":"com.github.kyuubiran.ezxhelper.utils.XposedHookFactory.before","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-xposed-hook-factory/before.html","searchKeys":["before","fun before(before: Hooker)","com.github.kyuubiran.ezxhelper.utils.XposedHookFactory.before"]},{"name":"fun clear()","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.clear","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/clear.html","searchKeys":["clear","fun clear()","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.clear"]},{"name":"fun d(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.d","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/d.html","searchKeys":["d","fun d(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.d"]},{"name":"fun d(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.d","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/d.html","searchKeys":["d","fun d(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.d"]},{"name":"fun d(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.d","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/d.html","searchKeys":["d","fun d(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.d"]},{"name":"fun dx(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.dx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/dx.html","searchKeys":["dx","fun dx(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.dx"]},{"name":"fun dx(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.dx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/dx.html","searchKeys":["dx","fun dx(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.dx"]},{"name":"fun dx(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.dx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/dx.html","searchKeys":["dx","fun dx(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.dx"]},{"name":"fun dx(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.dx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/dx.html","searchKeys":["dx","fun dx(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.dx"]},{"name":"fun e(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.e","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/e.html","searchKeys":["e","fun e(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.e"]},{"name":"fun e(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.e","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/e.html","searchKeys":["e","fun e(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.e"]},{"name":"fun e(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.e","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/e.html","searchKeys":["e","fun e(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.e"]},{"name":"fun ex(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.ex","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/ex.html","searchKeys":["ex","fun ex(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.ex"]},{"name":"fun ex(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.ex","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/ex.html","searchKeys":["ex","fun ex(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.ex"]},{"name":"fun ex(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.ex","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/ex.html","searchKeys":["ex","fun ex(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.ex"]},{"name":"fun ex(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.ex","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/ex.html","searchKeys":["ex","fun ex(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.ex"]},{"name":"fun findAllConstructors(clz: Class<*>, condition: ConstructorCondition): List<Constructor<*>>","description":"com.github.kyuubiran.ezxhelper.utils.findAllConstructors","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-constructors.html","searchKeys":["findAllConstructors","fun findAllConstructors(clz: Class<*>, condition: ConstructorCondition): List<Constructor<*>>","com.github.kyuubiran.ezxhelper.utils.findAllConstructors"]},{"name":"fun findAllConstructors(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, condition: ConstructorCondition): List<Constructor<*>>","description":"com.github.kyuubiran.ezxhelper.utils.findAllConstructors","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-constructors.html","searchKeys":["findAllConstructors","fun findAllConstructors(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, condition: ConstructorCondition): List<Constructor<*>>","com.github.kyuubiran.ezxhelper.utils.findAllConstructors"]},{"name":"fun findAllFields(clz: Class<*>, findSuper: Boolean = false, condition: FieldCondition): List<Field>","description":"com.github.kyuubiran.ezxhelper.utils.findAllFields","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-fields.html","searchKeys":["findAllFields","fun findAllFields(clz: Class<*>, findSuper: Boolean = false, condition: FieldCondition): List<Field>","com.github.kyuubiran.ezxhelper.utils.findAllFields"]},{"name":"fun findAllFields(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: FieldCondition): List<Field>","description":"com.github.kyuubiran.ezxhelper.utils.findAllFields","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-fields.html","searchKeys":["findAllFields","fun findAllFields(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: FieldCondition): List<Field>","com.github.kyuubiran.ezxhelper.utils.findAllFields"]},{"name":"fun findAllMethods(clz: Class<*>, findSuper: Boolean = false, condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun findAllMethods(clz: Class<*>, findSuper: Boolean = false, condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun findAllMethods(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","fun findAllMethods(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"fun findConstructor(clz: Class<*>, condition: ConstructorCondition): Constructor<*>","description":"com.github.kyuubiran.ezxhelper.utils.findConstructor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor.html","searchKeys":["findConstructor","fun findConstructor(clz: Class<*>, condition: ConstructorCondition): Constructor<*>","com.github.kyuubiran.ezxhelper.utils.findConstructor"]},{"name":"fun findConstructor(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, condition: ConstructorCondition): Constructor<*>","description":"com.github.kyuubiran.ezxhelper.utils.findConstructor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor.html","searchKeys":["findConstructor","fun findConstructor(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, condition: ConstructorCondition): Constructor<*>","com.github.kyuubiran.ezxhelper.utils.findConstructor"]},{"name":"fun findConstructorOrNull(clz: Class<*>, condition: ConstructorCondition): Constructor<*>?","description":"com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor-or-null.html","searchKeys":["findConstructorOrNull","fun findConstructorOrNull(clz: Class<*>, condition: ConstructorCondition): Constructor<*>?","com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull"]},{"name":"fun findConstructorOrNull(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, condition: ConstructorCondition): Constructor<*>?","description":"com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor-or-null.html","searchKeys":["findConstructorOrNull","fun findConstructorOrNull(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, condition: ConstructorCondition): Constructor<*>?","com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull"]},{"name":"fun findField(clz: Class<*>, findSuper: Boolean = false, condition: FieldCondition): Field","description":"com.github.kyuubiran.ezxhelper.utils.findField","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field.html","searchKeys":["findField","fun findField(clz: Class<*>, findSuper: Boolean = false, condition: FieldCondition): Field","com.github.kyuubiran.ezxhelper.utils.findField"]},{"name":"fun findField(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: FieldCondition): Field","description":"com.github.kyuubiran.ezxhelper.utils.findField","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field.html","searchKeys":["findField","fun findField(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: FieldCondition): Field","com.github.kyuubiran.ezxhelper.utils.findField"]},{"name":"fun findFieldOrNull(clz: Class<*>, findSuper: Boolean = false, condition: FieldCondition): Field?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-or-null.html","searchKeys":["findFieldOrNull","fun findFieldOrNull(clz: Class<*>, findSuper: Boolean = false, condition: FieldCondition): Field?","com.github.kyuubiran.ezxhelper.utils.findFieldOrNull"]},{"name":"fun findFieldOrNull(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: FieldCondition): Field?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-or-null.html","searchKeys":["findFieldOrNull","fun findFieldOrNull(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: FieldCondition): Field?","com.github.kyuubiran.ezxhelper.utils.findFieldOrNull"]},{"name":"fun findMethod(clz: Class<*>, findSuper: Boolean = false, condition: MethodCondition): Method","description":"com.github.kyuubiran.ezxhelper.utils.findMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method.html","searchKeys":["findMethod","fun findMethod(clz: Class<*>, findSuper: Boolean = false, condition: MethodCondition): Method","com.github.kyuubiran.ezxhelper.utils.findMethod"]},{"name":"fun findMethod(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Method","description":"com.github.kyuubiran.ezxhelper.utils.findMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method.html","searchKeys":["findMethod","fun findMethod(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Method","com.github.kyuubiran.ezxhelper.utils.findMethod"]},{"name":"fun findMethodOrNull(clz: Class<*>, findSuper: Boolean = false, condition: MethodCondition): Method?","description":"com.github.kyuubiran.ezxhelper.utils.findMethodOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method-or-null.html","searchKeys":["findMethodOrNull","fun findMethodOrNull(clz: Class<*>, findSuper: Boolean = false, condition: MethodCondition): Method?","com.github.kyuubiran.ezxhelper.utils.findMethodOrNull"]},{"name":"fun findMethodOrNull(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Method?","description":"com.github.kyuubiran.ezxhelper.utils.findMethodOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method-or-null.html","searchKeys":["findMethodOrNull","fun findMethodOrNull(clzName: String, classLoader: ClassLoader = InitFields.ezXClassLoader, findSuper: Boolean = false, condition: MethodCondition): Method?","com.github.kyuubiran.ezxhelper.utils.findMethodOrNull"]},{"name":"fun getFieldByDesc(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Field","description":"com.github.kyuubiran.ezxhelper.utils.getFieldByDesc","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-field-by-desc.html","searchKeys":["getFieldByDesc","fun getFieldByDesc(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Field","com.github.kyuubiran.ezxhelper.utils.getFieldByDesc"]},{"name":"fun getFieldByDescOrNull(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Field?","description":"com.github.kyuubiran.ezxhelper.utils.getFieldByDescOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-field-by-desc-or-null.html","searchKeys":["getFieldByDescOrNull","fun getFieldByDescOrNull(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Field?","com.github.kyuubiran.ezxhelper.utils.getFieldByDescOrNull"]},{"name":"fun getIdByName(name: String, ctx: Context = InitFields.appContext): Int","description":"com.github.kyuubiran.ezxhelper.utils.getIdByName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-id-by-name.html","searchKeys":["getIdByName","fun getIdByName(name: String, ctx: Context = InitFields.appContext): Int","com.github.kyuubiran.ezxhelper.utils.getIdByName"]},{"name":"fun getMethodByDesc(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Method","description":"com.github.kyuubiran.ezxhelper.utils.getMethodByDesc","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-method-by-desc.html","searchKeys":["getMethodByDesc","fun getMethodByDesc(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Method","com.github.kyuubiran.ezxhelper.utils.getMethodByDesc"]},{"name":"fun getMethodByDescOrNull(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Method?","description":"com.github.kyuubiran.ezxhelper.utils.getMethodByDescOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-method-by-desc-or-null.html","searchKeys":["getMethodByDescOrNull","fun getMethodByDescOrNull(desc: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Method?","com.github.kyuubiran.ezxhelper.utils.getMethodByDescOrNull"]},{"name":"fun getStaticObject(field: Field): Any","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object.html","searchKeys":["getStaticObject","fun getStaticObject(field: Field): Any","com.github.kyuubiran.ezxhelper.utils.getStaticObject"]},{"name":"fun getStaticObjectOrNull(field: Field): Any?","description":"com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/get-static-object-or-null.html","searchKeys":["getStaticObjectOrNull","fun getStaticObjectOrNull(field: Field): Any?","com.github.kyuubiran.ezxhelper.utils.getStaticObjectOrNull"]},{"name":"fun hookAllConstructorAfter(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader, priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorAfter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-after.html","searchKeys":["hookAllConstructorAfter","fun hookAllConstructorAfter(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader, priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorAfter"]},{"name":"fun hookAllConstructorBefore(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader, priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorBefore","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-before.html","searchKeys":["hookAllConstructorBefore","fun hookAllConstructorBefore(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader, priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorBefore"]},{"name":"fun hookAllConstructorReplace(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader, priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","description":"com.github.kyuubiran.ezxhelper.utils.hookAllConstructorReplace","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hook-all-constructor-replace.html","searchKeys":["hookAllConstructorReplace","fun hookAllConstructorReplace(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader, priority: Int = XCallback.PRIORITY_DEFAULT, hooker: Hooker): Array<XC_MethodHook.Unhook>","com.github.kyuubiran.ezxhelper.utils.hookAllConstructorReplace"]},{"name":"fun i(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.i","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/i.html","searchKeys":["i","fun i(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.i"]},{"name":"fun i(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.i","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/i.html","searchKeys":["i","fun i(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.i"]},{"name":"fun i(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.i","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/i.html","searchKeys":["i","fun i(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.i"]},{"name":"fun initActivityProxyManager(modulePackageName: String, hostActivityProxyName: String, moduleClassLoader: ClassLoader, hostClassLoader: ClassLoader = AndroidAppHelper.currentApplication().classLoader!!)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initActivityProxyManager","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/init-activity-proxy-manager.html","searchKeys":["initActivityProxyManager","fun initActivityProxyManager(modulePackageName: String, hostActivityProxyName: String, moduleClassLoader: ClassLoader, hostClassLoader: ClassLoader = AndroidAppHelper.currentApplication().classLoader!!)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initActivityProxyManager"]},{"name":"fun initAppContext(context: Context = AndroidAppHelper.currentApplication(), addPath: Boolean = false, initModuleResources: Boolean = false)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initAppContext","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/init-app-context.html","searchKeys":["initAppContext","fun initAppContext(context: Context = AndroidAppHelper.currentApplication(), addPath: Boolean = false, initModuleResources: Boolean = false)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initAppContext"]},{"name":"fun initHandleLoadPackage(lpparam: XC_LoadPackage.LoadPackageParam)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initHandleLoadPackage","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/init-handle-load-package.html","searchKeys":["initHandleLoadPackage","fun initHandleLoadPackage(lpparam: XC_LoadPackage.LoadPackageParam)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initHandleLoadPackage"]},{"name":"fun initSubActivity()","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initSubActivity","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/init-sub-activity.html","searchKeys":["initSubActivity","fun initSubActivity()","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initSubActivity"]},{"name":"fun initZygote(startupParam: IXposedHookZygoteInit.StartupParam)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initZygote","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/init-zygote.html","searchKeys":["initZygote","fun initZygote(startupParam: IXposedHookZygoteInit.StartupParam)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.initZygote"]},{"name":"fun ix(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.ix","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/ix.html","searchKeys":["ix","fun ix(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.ix"]},{"name":"fun ix(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.ix","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/ix.html","searchKeys":["ix","fun ix(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.ix"]},{"name":"fun ix(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.ix","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/ix.html","searchKeys":["ix","fun ix(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.ix"]},{"name":"fun ix(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.ix","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/ix.html","searchKeys":["ix","fun ix(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.ix"]},{"name":"fun loadClass(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","description":"com.github.kyuubiran.ezxhelper.utils.loadClass","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class.html","searchKeys":["loadClass","fun loadClass(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","com.github.kyuubiran.ezxhelper.utils.loadClass"]},{"name":"fun loadClassAny(vararg clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","description":"com.github.kyuubiran.ezxhelper.utils.loadClassAny","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-any.html","searchKeys":["loadClassAny","fun loadClassAny(vararg clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>","com.github.kyuubiran.ezxhelper.utils.loadClassAny"]},{"name":"fun loadClassAnyOrNull(vararg clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","description":"com.github.kyuubiran.ezxhelper.utils.loadClassAnyOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-any-or-null.html","searchKeys":["loadClassAnyOrNull","fun loadClassAnyOrNull(vararg clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","com.github.kyuubiran.ezxhelper.utils.loadClassAnyOrNull"]},{"name":"fun loadClassOrNull(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","description":"com.github.kyuubiran.ezxhelper.utils.loadClassOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/load-class-or-null.html","searchKeys":["loadClassOrNull","fun loadClassOrNull(clzName: String, clzLoader: ClassLoader = InitFields.ezXClassLoader): Class<*>?","com.github.kyuubiran.ezxhelper.utils.loadClassOrNull"]},{"name":"fun remove(listener: (T) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.remove","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/remove.html","searchKeys":["remove","fun remove(listener: (T) -> Unit)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.remove"]},{"name":"fun removeAll(listeners: Array<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.removeAll","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/remove-all.html","searchKeys":["removeAll","fun removeAll(listeners: Array<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.removeAll"]},{"name":"fun removeAll(listeners: Collection<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.removeAll","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/remove-all.html","searchKeys":["removeAll","fun removeAll(listeners: Collection<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.removeAll"]},{"name":"fun restartHostApp(activity: Activity)","description":"com.github.kyuubiran.ezxhelper.utils.restartHostApp","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/restart-host-app.html","searchKeys":["restartHostApp","fun restartHostApp(activity: Activity)","com.github.kyuubiran.ezxhelper.utils.restartHostApp"]},{"name":"fun runOnMainThread(runnable: Runnable)","description":"com.github.kyuubiran.ezxhelper.utils.runOnMainThread","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/run-on-main-thread.html","searchKeys":["runOnMainThread","fun runOnMainThread(runnable: Runnable)","com.github.kyuubiran.ezxhelper.utils.runOnMainThread"]},{"name":"fun setEzClassLoader(classLoader: ClassLoader)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setEzClassLoader","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/set-ez-class-loader.html","searchKeys":["setEzClassLoader","fun setEzClassLoader(classLoader: ClassLoader)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setEzClassLoader"]},{"name":"fun setHostPackageName(packageName: String)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setHostPackageName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/set-host-package-name.html","searchKeys":["setHostPackageName","fun setHostPackageName(packageName: String)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setHostPackageName"]},{"name":"fun setLogTag(tag: String)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setLogTag","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/set-log-tag.html","searchKeys":["setLogTag","fun setLogTag(tag: String)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setLogTag"]},{"name":"fun setLogXp(toXp: Boolean)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setLogXp","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/set-log-xp.html","searchKeys":["setLogXp","fun setLogXp(toXp: Boolean)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setLogXp"]},{"name":"fun setLogger(log: Logger)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setLogger","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/set-logger.html","searchKeys":["setLogger","fun setLogger(log: Logger)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setLogger"]},{"name":"fun setToastTag(tag: String)","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setToastTag","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/set-toast-tag.html","searchKeys":["setToastTag","fun setToastTag(tag: String)","com.github.kyuubiran.ezxhelper.init.EzXHelperInit.setToastTag"]},{"name":"fun toast(msg: String, duration: Int = Toast.LENGTH_SHORT)","description":"com.github.kyuubiran.ezxhelper.utils.Log.toast","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/toast.html","searchKeys":["toast","fun toast(msg: String, duration: Int = Toast.LENGTH_SHORT)","com.github.kyuubiran.ezxhelper.utils.Log.toast"]},{"name":"fun toast(msg: String, vararg formats: String, duration: Int = Toast.LENGTH_SHORT)","description":"com.github.kyuubiran.ezxhelper.utils.Log.toast","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/toast.html","searchKeys":["toast","fun toast(msg: String, vararg formats: String, duration: Int = Toast.LENGTH_SHORT)","com.github.kyuubiran.ezxhelper.utils.Log.toast"]},{"name":"fun unsafeInvoke(value: T)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.unsafeInvoke","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/unsafe-invoke.html","searchKeys":["unsafeInvoke","fun unsafeInvoke(value: T)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.unsafeInvoke"]},{"name":"fun w(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.w","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/w.html","searchKeys":["w","fun w(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.w"]},{"name":"fun w(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.w","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/w.html","searchKeys":["w","fun w(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.w"]},{"name":"fun w(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.w","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/w.html","searchKeys":["w","fun w(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.w"]},{"name":"fun wx(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Log.wx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/wx.html","searchKeys":["wx","fun wx(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Log.wx"]},{"name":"fun wx(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.wx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/wx.html","searchKeys":["wx","fun wx(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.wx"]},{"name":"fun wx(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Log.wx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/wx.html","searchKeys":["wx","fun wx(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Log.wx"]},{"name":"fun wx(thr: Throwable, msg: String = \"\")","description":"com.github.kyuubiran.ezxhelper.utils.Logger.wx","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/wx.html","searchKeys":["wx","fun wx(thr: Throwable, msg: String = \"\")","com.github.kyuubiran.ezxhelper.utils.Logger.wx"]},{"name":"infix fun Class<*>.mcp(condition: MethodCondition): Pair<Class<*>, MethodCondition>","description":"com.github.kyuubiran.ezxhelper.utils.mcp","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/mcp.html","searchKeys":["mcp","infix fun Class<*>.mcp(condition: MethodCondition): Pair<Class<*>, MethodCondition>","com.github.kyuubiran.ezxhelper.utils.mcp"]},{"name":"infix fun String.mcp(condition: MethodCondition): Pair<String, MethodCondition>","description":"com.github.kyuubiran.ezxhelper.utils.mcp","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/mcp.html","searchKeys":["mcp","infix fun String.mcp(condition: MethodCondition): Pair<String, MethodCondition>","com.github.kyuubiran.ezxhelper.utils.mcp"]},{"name":"inline fun <E> MutableList<E>.applyRetainIf(predicate: (E) -> Boolean): MutableList<E>","description":"com.github.kyuubiran.ezxhelper.utils.applyRetainIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/apply-retain-if.html","searchKeys":["applyRetainIf","inline fun <E> MutableList<E>.applyRetainIf(predicate: (E) -> Boolean): MutableList<E>","com.github.kyuubiran.ezxhelper.utils.applyRetainIf"]},{"name":"inline fun <E> MutableList<E>.retainIf(predicate: (E) -> Boolean)","description":"com.github.kyuubiran.ezxhelper.utils.retainIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/retain-if.html","searchKeys":["retainIf","inline fun <E> MutableList<E>.retainIf(predicate: (E) -> Boolean)","com.github.kyuubiran.ezxhelper.utils.retainIf"]},{"name":"inline fun <E> MutableSet<E>.applyRetainIf(predicate: (E) -> Boolean): MutableSet<E>","description":"com.github.kyuubiran.ezxhelper.utils.applyRetainIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/apply-retain-if.html","searchKeys":["applyRetainIf","inline fun <E> MutableSet<E>.applyRetainIf(predicate: (E) -> Boolean): MutableSet<E>","com.github.kyuubiran.ezxhelper.utils.applyRetainIf"]},{"name":"inline fun <E> MutableSet<E>.retainIf(predicate: (E) -> Boolean)","description":"com.github.kyuubiran.ezxhelper.utils.retainIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/retain-if.html","searchKeys":["retainIf","inline fun <E> MutableSet<E>.retainIf(predicate: (E) -> Boolean)","com.github.kyuubiran.ezxhelper.utils.retainIf"]},{"name":"inline fun <K, V> MutableMap<K, V>.applyRemoveIf(predicate: (K, V) -> Boolean): MutableMap<K, V>","description":"com.github.kyuubiran.ezxhelper.utils.applyRemoveIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/apply-remove-if.html","searchKeys":["applyRemoveIf","inline fun <K, V> MutableMap<K, V>.applyRemoveIf(predicate: (K, V) -> Boolean): MutableMap<K, V>","com.github.kyuubiran.ezxhelper.utils.applyRemoveIf"]},{"name":"inline fun <K, V> MutableMap<K, V>.applyRetainIf(predicate: (K, V) -> Boolean): MutableMap<K, V>","description":"com.github.kyuubiran.ezxhelper.utils.applyRetainIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/apply-retain-if.html","searchKeys":["applyRetainIf","inline fun <K, V> MutableMap<K, V>.applyRetainIf(predicate: (K, V) -> Boolean): MutableMap<K, V>","com.github.kyuubiran.ezxhelper.utils.applyRetainIf"]},{"name":"inline fun <K, V> MutableMap<K, V>.removeIf(predicate: (K, V) -> Boolean)","description":"com.github.kyuubiran.ezxhelper.utils.removeIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/remove-if.html","searchKeys":["removeIf","inline fun <K, V> MutableMap<K, V>.removeIf(predicate: (K, V) -> Boolean)","com.github.kyuubiran.ezxhelper.utils.removeIf"]},{"name":"inline fun <K, V> MutableMap<K, V>.retainIf(predicate: (K, V) -> Boolean)","description":"com.github.kyuubiran.ezxhelper.utils.retainIf","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/retain-if.html","searchKeys":["retainIf","inline fun <K, V> MutableMap<K, V>.retainIf(predicate: (K, V) -> Boolean)","com.github.kyuubiran.ezxhelper.utils.retainIf"]},{"name":"inline fun <R> Result<R>.logdIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logdIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logd-if-throw.html","searchKeys":["logdIfThrow","inline fun <R> Result<R>.logdIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logdIfThrow"]},{"name":"inline fun <R> Result<R>.logdxIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logdxIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logdx-if-throw.html","searchKeys":["logdxIfThrow","inline fun <R> Result<R>.logdxIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logdxIfThrow"]},{"name":"inline fun <R> Result<R>.logeIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logeIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/loge-if-throw.html","searchKeys":["logeIfThrow","inline fun <R> Result<R>.logeIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logeIfThrow"]},{"name":"inline fun <R> Result<R>.logexIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logexIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logex-if-throw.html","searchKeys":["logexIfThrow","inline fun <R> Result<R>.logexIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logexIfThrow"]},{"name":"inline fun <R> Result<R>.logiIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logiIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logi-if-throw.html","searchKeys":["logiIfThrow","inline fun <R> Result<R>.logiIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logiIfThrow"]},{"name":"inline fun <R> Result<R>.logixIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logixIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logix-if-throw.html","searchKeys":["logixIfThrow","inline fun <R> Result<R>.logixIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logixIfThrow"]},{"name":"inline fun <R> Result<R>.logwIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logwIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logw-if-throw.html","searchKeys":["logwIfThrow","inline fun <R> Result<R>.logwIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logwIfThrow"]},{"name":"inline fun <R> Result<R>.logwxIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","description":"com.github.kyuubiran.ezxhelper.utils.Log.logwxIfThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/logwx-if-throw.html","searchKeys":["logwxIfThrow","inline fun <R> Result<R>.logwxIfThrow(msg: String = \"\", then: (Throwable) -> Unit = {}): Unit?","com.github.kyuubiran.ezxhelper.utils.Log.logwxIfThrow"]},{"name":"inline fun <T> JSONArray.mapToList(transform: (Any) -> T): List<T>","description":"com.github.kyuubiran.ezxhelper.utils.mapToList","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/map-to-list.html","searchKeys":["mapToList","inline fun <T> JSONArray.mapToList(transform: (Any) -> T): List<T>","com.github.kyuubiran.ezxhelper.utils.mapToList"]},{"name":"inline fun <T> tryOrLogNull(block: () -> T?): T?","description":"com.github.kyuubiran.ezxhelper.utils.tryOrLogNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/try-or-log-null.html","searchKeys":["tryOrLogNull","inline fun <T> tryOrLogNull(block: () -> T?): T?","com.github.kyuubiran.ezxhelper.utils.tryOrLogNull"]},{"name":"inline fun <T> tryOrNull(block: () -> T?): T?","description":"com.github.kyuubiran.ezxhelper.utils.tryOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/try-or-null.html","searchKeys":["tryOrNull","inline fun <T> tryOrNull(block: () -> T?): T?","com.github.kyuubiran.ezxhelper.utils.tryOrNull"]},{"name":"inline fun Class<*>.findAllConstructors(noinline condition: ConstructorCondition): List<Constructor<*>>","description":"com.github.kyuubiran.ezxhelper.utils.findAllConstructors","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-constructors.html","searchKeys":["findAllConstructors","inline fun Class<*>.findAllConstructors(noinline condition: ConstructorCondition): List<Constructor<*>>","com.github.kyuubiran.ezxhelper.utils.findAllConstructors"]},{"name":"inline fun Class<*>.findAllFields(findSuper: Boolean = false, noinline condition: FieldCondition): List<Field>","description":"com.github.kyuubiran.ezxhelper.utils.findAllFields","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-fields.html","searchKeys":["findAllFields","inline fun Class<*>.findAllFields(findSuper: Boolean = false, noinline condition: FieldCondition): List<Field>","com.github.kyuubiran.ezxhelper.utils.findAllFields"]},{"name":"inline fun Class<*>.findAllMethods(findSuper: Boolean = false, noinline condition: MethodCondition): List<Method>","description":"com.github.kyuubiran.ezxhelper.utils.findAllMethods","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-all-methods.html","searchKeys":["findAllMethods","inline fun Class<*>.findAllMethods(findSuper: Boolean = false, noinline condition: MethodCondition): List<Method>","com.github.kyuubiran.ezxhelper.utils.findAllMethods"]},{"name":"inline fun Class<*>.findConstructor(noinline condition: ConstructorCondition): Constructor<*>","description":"com.github.kyuubiran.ezxhelper.utils.findConstructor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor.html","searchKeys":["findConstructor","inline fun Class<*>.findConstructor(noinline condition: ConstructorCondition): Constructor<*>","com.github.kyuubiran.ezxhelper.utils.findConstructor"]},{"name":"inline fun Class<*>.findConstructorOrNull(noinline condition: ConstructorCondition): Constructor<*>?","description":"com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-constructor-or-null.html","searchKeys":["findConstructorOrNull","inline fun Class<*>.findConstructorOrNull(noinline condition: ConstructorCondition): Constructor<*>?","com.github.kyuubiran.ezxhelper.utils.findConstructorOrNull"]},{"name":"inline fun Class<*>.findField(findSuper: Boolean = false, noinline condition: FieldCondition): Field","description":"com.github.kyuubiran.ezxhelper.utils.findField","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field.html","searchKeys":["findField","inline fun Class<*>.findField(findSuper: Boolean = false, noinline condition: FieldCondition): Field","com.github.kyuubiran.ezxhelper.utils.findField"]},{"name":"inline fun Class<*>.findFieldOrNull(findSuper: Boolean = false, noinline condition: FieldCondition): Field?","description":"com.github.kyuubiran.ezxhelper.utils.findFieldOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-field-or-null.html","searchKeys":["findFieldOrNull","inline fun Class<*>.findFieldOrNull(findSuper: Boolean = false, noinline condition: FieldCondition): Field?","com.github.kyuubiran.ezxhelper.utils.findFieldOrNull"]},{"name":"inline fun Class<*>.findMethod(findSuper: Boolean = false, noinline condition: MethodCondition): Method","description":"com.github.kyuubiran.ezxhelper.utils.findMethod","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method.html","searchKeys":["findMethod","inline fun Class<*>.findMethod(findSuper: Boolean = false, noinline condition: MethodCondition): Method","com.github.kyuubiran.ezxhelper.utils.findMethod"]},{"name":"inline fun Class<*>.findMethodOrNull(findSuper: Boolean = false, noinline condition: MethodCondition): Method?","description":"com.github.kyuubiran.ezxhelper.utils.findMethodOrNull","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-method-or-null.html","searchKeys":["findMethodOrNull","inline fun Class<*>.findMethodOrNull(findSuper: Boolean = false, noinline condition: MethodCondition): Method?","com.github.kyuubiran.ezxhelper.utils.findMethodOrNull"]},{"name":"inline fun ClassLoader.findDexClassLoader(crossinline delegator: (BaseDexClassLoader) -> BaseDexClassLoader = { x -> x }): BaseDexClassLoader?","description":"com.github.kyuubiran.ezxhelper.utils.findDexClassLoader","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/find-dex-class-loader.html","searchKeys":["findDexClassLoader","inline fun ClassLoader.findDexClassLoader(crossinline delegator: (BaseDexClassLoader) -> BaseDexClassLoader = { x -> x }): BaseDexClassLoader?","com.github.kyuubiran.ezxhelper.utils.findDexClassLoader"]},{"name":"inline fun JSONArray.filter(predicate: (Any) -> Boolean): JSONArray","description":"com.github.kyuubiran.ezxhelper.utils.filter","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/filter.html","searchKeys":["filter","inline fun JSONArray.filter(predicate: (Any) -> Boolean): JSONArray","com.github.kyuubiran.ezxhelper.utils.filter"]},{"name":"inline fun JSONArray.forEach(action: (Any) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.forEach","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/for-each.html","searchKeys":["forEach","inline fun JSONArray.forEach(action: (Any) -> Unit)","com.github.kyuubiran.ezxhelper.utils.forEach"]},{"name":"inline fun JSONArray.forEachIndexed(action: (Int, Any) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.forEachIndexed","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/for-each-indexed.html","searchKeys":["forEachIndexed","inline fun JSONArray.forEachIndexed(action: (Int, Any) -> Unit)","com.github.kyuubiran.ezxhelper.utils.forEachIndexed"]},{"name":"inline fun JSONArray.map(transform: (Any) -> Any): JSONArray","description":"com.github.kyuubiran.ezxhelper.utils.map","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/map.html","searchKeys":["map","inline fun JSONArray.map(transform: (Any) -> Any): JSONArray","com.github.kyuubiran.ezxhelper.utils.map"]},{"name":"inline fun JSONArray.onEach(action: (Any) -> Unit): JSONArray","description":"com.github.kyuubiran.ezxhelper.utils.onEach","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/on-each.html","searchKeys":["onEach","inline fun JSONArray.onEach(action: (Any) -> Unit): JSONArray","com.github.kyuubiran.ezxhelper.utils.onEach"]},{"name":"inline fun JSONArray.onEachIndexed(action: (Int, Any) -> Unit): JSONArray","description":"com.github.kyuubiran.ezxhelper.utils.onEachIndexed","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/on-each-indexed.html","searchKeys":["onEachIndexed","inline fun JSONArray.onEachIndexed(action: (Int, Any) -> Unit): JSONArray","com.github.kyuubiran.ezxhelper.utils.onEachIndexed"]},{"name":"inline fun ViewGroup.forEach(action: (view: View) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.forEach","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/for-each.html","searchKeys":["forEach","inline fun ViewGroup.forEach(action: (view: View) -> Unit)","com.github.kyuubiran.ezxhelper.utils.forEach"]},{"name":"inline fun ViewGroup.forEachIndexed(action: (index: Int, view: View) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.forEachIndexed","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/for-each-indexed.html","searchKeys":["forEachIndexed","inline fun ViewGroup.forEachIndexed(action: (index: Int, view: View) -> Unit)","com.github.kyuubiran.ezxhelper.utils.forEachIndexed"]},{"name":"inline fun argTypes(vararg argTypes: Class<*>): ArgTypes","description":"com.github.kyuubiran.ezxhelper.utils.argTypes","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/arg-types.html","searchKeys":["argTypes","inline fun argTypes(vararg argTypes: Class<*>): ArgTypes","com.github.kyuubiran.ezxhelper.utils.argTypes"]},{"name":"inline fun args(vararg args: Any?): Args","description":"com.github.kyuubiran.ezxhelper.utils.args","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/args.html","searchKeys":["args","inline fun args(vararg args: Any?): Args","com.github.kyuubiran.ezxhelper.utils.args"]},{"name":"inline fun buildJSONArray(builder: JSONArray.() -> Unit): JSONArray","description":"com.github.kyuubiran.ezxhelper.utils.buildJSONArray","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/build-j-s-o-n-array.html","searchKeys":["buildJSONArray","inline fun buildJSONArray(builder: JSONArray.() -> Unit): JSONArray","com.github.kyuubiran.ezxhelper.utils.buildJSONArray"]},{"name":"inline fun buildJSONObject(builder: JSONObject.() -> Unit): JSONObject","description":"com.github.kyuubiran.ezxhelper.utils.buildJSONObject","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/build-j-s-o-n-object.html","searchKeys":["buildJSONObject","inline fun buildJSONObject(builder: JSONObject.() -> Unit): JSONObject","com.github.kyuubiran.ezxhelper.utils.buildJSONObject"]},{"name":"inline fun hooker(crossinline hookCallback: Hooker): Hooker","description":"com.github.kyuubiran.ezxhelper.utils.hooker","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/hooker.html","searchKeys":["hooker","inline fun hooker(crossinline hookCallback: Hooker): Hooker","com.github.kyuubiran.ezxhelper.utils.hooker"]},{"name":"inline fun replaceHooker(crossinline hookCallback: ReplaceHooker): ReplaceHooker","description":"com.github.kyuubiran.ezxhelper.utils.replaceHooker","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/replace-hooker.html","searchKeys":["replaceHooker","inline fun replaceHooker(crossinline hookCallback: ReplaceHooker): ReplaceHooker","com.github.kyuubiran.ezxhelper.utils.replaceHooker"]},{"name":"inline fun tryOrFalse(block: () -> Unit): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.tryOrFalse","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/try-or-false.html","searchKeys":["tryOrFalse","inline fun tryOrFalse(block: () -> Unit): Boolean","com.github.kyuubiran.ezxhelper.utils.tryOrFalse"]},{"name":"inline fun tryOrLog(block: () -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.tryOrLog","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/try-or-log.html","searchKeys":["tryOrLog","inline fun tryOrLog(block: () -> Unit)","com.github.kyuubiran.ezxhelper.utils.tryOrLog"]},{"name":"inline fun tryOrLogFalse(block: () -> Unit): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.tryOrLogFalse","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/try-or-log-false.html","searchKeys":["tryOrLogFalse","inline fun tryOrLogFalse(block: () -> Unit): Boolean","com.github.kyuubiran.ezxhelper.utils.tryOrLogFalse"]},{"name":"lateinit var ACTIVITY_PROXY_INTENT: String","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.ACTIVITY_PROXY_INTENT","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-proxy-manager/-a-c-t-i-v-i-t-y_-p-r-o-x-y_-i-n-t-e-n-t.html","searchKeys":["ACTIVITY_PROXY_INTENT","lateinit var ACTIVITY_PROXY_INTENT: String","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.ACTIVITY_PROXY_INTENT"]},{"name":"lateinit var HOST_ACTIVITY_PROXY_NAME: String","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.HOST_ACTIVITY_PROXY_NAME","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-proxy-manager/-h-o-s-t_-a-c-t-i-v-i-t-y_-p-r-o-x-y_-n-a-m-e.html","searchKeys":["HOST_ACTIVITY_PROXY_NAME","lateinit var HOST_ACTIVITY_PROXY_NAME: String","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.HOST_ACTIVITY_PROXY_NAME"]},{"name":"lateinit var HOST_CLASS_LOADER: ClassLoader","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.HOST_CLASS_LOADER","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-proxy-manager/-h-o-s-t_-c-l-a-s-s_-l-o-a-d-e-r.html","searchKeys":["HOST_CLASS_LOADER","lateinit var HOST_CLASS_LOADER: ClassLoader","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.HOST_CLASS_LOADER"]},{"name":"lateinit var MODULE_CLASS_LOADER: ClassLoader","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.MODULE_CLASS_LOADER","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-proxy-manager/-m-o-d-u-l-e_-c-l-a-s-s_-l-o-a-d-e-r.html","searchKeys":["MODULE_CLASS_LOADER","lateinit var MODULE_CLASS_LOADER: ClassLoader","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.MODULE_CLASS_LOADER"]},{"name":"lateinit var MODULE_PACKAGE_NAME_ID: String","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.MODULE_PACKAGE_NAME_ID","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-proxy-manager/-m-o-d-u-l-e_-p-a-c-k-a-g-e_-n-a-m-e_-i-d.html","searchKeys":["MODULE_PACKAGE_NAME_ID","lateinit var MODULE_PACKAGE_NAME_ID: String","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager.MODULE_PACKAGE_NAME_ID"]},{"name":"lateinit var appContext: Context","description":"com.github.kyuubiran.ezxhelper.init.InitFields.appContext","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/app-context.html","searchKeys":["appContext","lateinit var appContext: Context","com.github.kyuubiran.ezxhelper.init.InitFields.appContext"]},{"name":"lateinit var ezXClassLoader: ClassLoader","description":"com.github.kyuubiran.ezxhelper.init.InitFields.ezXClassLoader","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/ez-x-class-loader.html","searchKeys":["ezXClassLoader","lateinit var ezXClassLoader: ClassLoader","com.github.kyuubiran.ezxhelper.init.InitFields.ezXClassLoader"]},{"name":"lateinit var hostPackageName: String","description":"com.github.kyuubiran.ezxhelper.init.InitFields.hostPackageName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/host-package-name.html","searchKeys":["hostPackageName","lateinit var hostPackageName: String","com.github.kyuubiran.ezxhelper.init.InitFields.hostPackageName"]},{"name":"lateinit var modulePath: String","description":"com.github.kyuubiran.ezxhelper.init.InitFields.modulePath","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/module-path.html","searchKeys":["modulePath","lateinit var modulePath: String","com.github.kyuubiran.ezxhelper.init.InitFields.modulePath"]},{"name":"lateinit var moduleRes: Resources","description":"com.github.kyuubiran.ezxhelper.init.InitFields.moduleRes","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/module-res.html","searchKeys":["moduleRes","lateinit var moduleRes: Resources","com.github.kyuubiran.ezxhelper.init.InitFields.moduleRes"]},{"name":"object ActivityHelper","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityHelper","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-helper/index.html","searchKeys":["ActivityHelper","object ActivityHelper","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityHelper"]},{"name":"object ActivityProxyManager","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-activity-proxy-manager/index.html","searchKeys":["ActivityProxyManager","object ActivityProxyManager","com.github.kyuubiran.ezxhelper.utils.parasitics.ActivityProxyManager"]},{"name":"object Companion","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.FixedClassLoader.Companion","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-fixed-class-loader/-companion/index.html","searchKeys":["Companion","object Companion","com.github.kyuubiran.ezxhelper.utils.parasitics.FixedClassLoader.Companion"]},{"name":"object EzXHelperInit","description":"com.github.kyuubiran.ezxhelper.init.EzXHelperInit","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-ez-x-helper-init/index.html","searchKeys":["EzXHelperInit","object EzXHelperInit","com.github.kyuubiran.ezxhelper.init.EzXHelperInit"]},{"name":"object InitFields","description":"com.github.kyuubiran.ezxhelper.init.InitFields","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/index.html","searchKeys":["InitFields","object InitFields","com.github.kyuubiran.ezxhelper.init.InitFields"]},{"name":"object Log","description":"com.github.kyuubiran.ezxhelper.utils.Log","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/index.html","searchKeys":["Log","object Log","com.github.kyuubiran.ezxhelper.utils.Log"]},{"name":"object LogLevel","description":"com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/-log-level/index.html","searchKeys":["LogLevel","object LogLevel","com.github.kyuubiran.ezxhelper.utils.Logger.LogLevel"]},{"name":"open class Logger","description":"com.github.kyuubiran.ezxhelper.utils.Logger","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/index.html","searchKeys":["Logger","open class Logger","com.github.kyuubiran.ezxhelper.utils.Logger"]},{"name":"open class TransferActivity : Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.TransferActivity","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-transfer-activity/index.html","searchKeys":["TransferActivity","open class TransferActivity : Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.TransferActivity"]},{"name":"open fun d(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.d","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/d.html","searchKeys":["d","open fun d(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.d"]},{"name":"open fun e(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.e","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/e.html","searchKeys":["e","open fun e(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.e"]},{"name":"open fun i(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.i","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/i.html","searchKeys":["i","open fun i(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.i"]},{"name":"open fun px(levelInt: Int, level: String, msg: String, thr: Throwable?)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.px","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/px.html","searchKeys":["px","open fun px(levelInt: Int, level: String, msg: String, thr: Throwable?)","com.github.kyuubiran.ezxhelper.utils.Logger.px"]},{"name":"open fun w(msg: String, thr: Throwable? = null)","description":"com.github.kyuubiran.ezxhelper.utils.Logger.w","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/w.html","searchKeys":["w","open fun w(msg: String, thr: Throwable? = null)","com.github.kyuubiran.ezxhelper.utils.Logger.w"]},{"name":"open operator override fun invoke(proxy: Any?, method: Method?, args: Array<Any>?): Any?","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.IActivityManagerHandler.invoke","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-i-activity-manager-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(proxy: Any?, method: Method?, args: Array<Any>?): Any?","com.github.kyuubiran.ezxhelper.utils.parasitics.IActivityManagerHandler.invoke"]},{"name":"open override fun acquireLooperManager(looper: Looper?): TestLooperManager","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.acquireLooperManager","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/acquire-looper-manager.html","searchKeys":["acquireLooperManager","open override fun acquireLooperManager(looper: Looper?): TestLooperManager","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.acquireLooperManager"]},{"name":"open override fun addMonitor(cls: String?, result: Instrumentation.ActivityResult?, block: Boolean): Instrumentation.ActivityMonitor","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addMonitor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/add-monitor.html","searchKeys":["addMonitor","open override fun addMonitor(cls: String?, result: Instrumentation.ActivityResult?, block: Boolean): Instrumentation.ActivityMonitor","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addMonitor"]},{"name":"open override fun addMonitor(filter: IntentFilter?, result: Instrumentation.ActivityResult?, block: Boolean): Instrumentation.ActivityMonitor","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addMonitor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/add-monitor.html","searchKeys":["addMonitor","open override fun addMonitor(filter: IntentFilter?, result: Instrumentation.ActivityResult?, block: Boolean): Instrumentation.ActivityMonitor","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addMonitor"]},{"name":"open override fun addMonitor(monitor: Instrumentation.ActivityMonitor?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addMonitor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/add-monitor.html","searchKeys":["addMonitor","open override fun addMonitor(monitor: Instrumentation.ActivityMonitor?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addMonitor"]},{"name":"open override fun addResults(results: Bundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addResults","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/add-results.html","searchKeys":["addResults","open override fun addResults(results: Bundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.addResults"]},{"name":"open override fun callActivityOnCreate(activity: Activity, icicle: Bundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnCreate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-create.html","searchKeys":["callActivityOnCreate","open override fun callActivityOnCreate(activity: Activity, icicle: Bundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnCreate"]},{"name":"open override fun callActivityOnCreate(activity: Activity, icicle: Bundle?, persistentState: PersistableBundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnCreate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-create.html","searchKeys":["callActivityOnCreate","open override fun callActivityOnCreate(activity: Activity, icicle: Bundle?, persistentState: PersistableBundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnCreate"]},{"name":"open override fun callActivityOnDestroy(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnDestroy","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-destroy.html","searchKeys":["callActivityOnDestroy","open override fun callActivityOnDestroy(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnDestroy"]},{"name":"open override fun callActivityOnNewIntent(activity: Activity?, intent: Intent?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnNewIntent","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-new-intent.html","searchKeys":["callActivityOnNewIntent","open override fun callActivityOnNewIntent(activity: Activity?, intent: Intent?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnNewIntent"]},{"name":"open override fun callActivityOnPause(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPause","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-pause.html","searchKeys":["callActivityOnPause","open override fun callActivityOnPause(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPause"]},{"name":"open override fun callActivityOnPictureInPictureRequested(activity: Activity)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPictureInPictureRequested","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-picture-in-picture-requested.html","searchKeys":["callActivityOnPictureInPictureRequested","open override fun callActivityOnPictureInPictureRequested(activity: Activity)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPictureInPictureRequested"]},{"name":"open override fun callActivityOnPostCreate(activity: Activity, savedInstanceState: Bundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPostCreate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-post-create.html","searchKeys":["callActivityOnPostCreate","open override fun callActivityOnPostCreate(activity: Activity, savedInstanceState: Bundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPostCreate"]},{"name":"open override fun callActivityOnPostCreate(activity: Activity, savedInstanceState: Bundle?, persistentState: PersistableBundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPostCreate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-post-create.html","searchKeys":["callActivityOnPostCreate","open override fun callActivityOnPostCreate(activity: Activity, savedInstanceState: Bundle?, persistentState: PersistableBundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnPostCreate"]},{"name":"open override fun callActivityOnRestart(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnRestart","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-restart.html","searchKeys":["callActivityOnRestart","open override fun callActivityOnRestart(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnRestart"]},{"name":"open override fun callActivityOnRestoreInstanceState(activity: Activity, savedInstanceState: Bundle)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnRestoreInstanceState","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-restore-instance-state.html","searchKeys":["callActivityOnRestoreInstanceState","open override fun callActivityOnRestoreInstanceState(activity: Activity, savedInstanceState: Bundle)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnRestoreInstanceState"]},{"name":"open override fun callActivityOnRestoreInstanceState(activity: Activity, savedInstanceState: Bundle?, persistentState: PersistableBundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnRestoreInstanceState","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-restore-instance-state.html","searchKeys":["callActivityOnRestoreInstanceState","open override fun callActivityOnRestoreInstanceState(activity: Activity, savedInstanceState: Bundle?, persistentState: PersistableBundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnRestoreInstanceState"]},{"name":"open override fun callActivityOnResume(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnResume","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-resume.html","searchKeys":["callActivityOnResume","open override fun callActivityOnResume(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnResume"]},{"name":"open override fun callActivityOnSaveInstanceState(activity: Activity, outState: Bundle)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnSaveInstanceState","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-save-instance-state.html","searchKeys":["callActivityOnSaveInstanceState","open override fun callActivityOnSaveInstanceState(activity: Activity, outState: Bundle)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnSaveInstanceState"]},{"name":"open override fun callActivityOnSaveInstanceState(activity: Activity, outState: Bundle, outPersistentState: PersistableBundle)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnSaveInstanceState","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-save-instance-state.html","searchKeys":["callActivityOnSaveInstanceState","open override fun callActivityOnSaveInstanceState(activity: Activity, outState: Bundle, outPersistentState: PersistableBundle)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnSaveInstanceState"]},{"name":"open override fun callActivityOnStart(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnStart","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-start.html","searchKeys":["callActivityOnStart","open override fun callActivityOnStart(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnStart"]},{"name":"open override fun callActivityOnStop(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnStop","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-stop.html","searchKeys":["callActivityOnStop","open override fun callActivityOnStop(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnStop"]},{"name":"open override fun callActivityOnUserLeaving(activity: Activity?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnUserLeaving","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-activity-on-user-leaving.html","searchKeys":["callActivityOnUserLeaving","open override fun callActivityOnUserLeaving(activity: Activity?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callActivityOnUserLeaving"]},{"name":"open override fun callApplicationOnCreate(app: Application?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callApplicationOnCreate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/call-application-on-create.html","searchKeys":["callApplicationOnCreate","open override fun callApplicationOnCreate(app: Application?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.callApplicationOnCreate"]},{"name":"open override fun checkMonitorHit(monitor: Instrumentation.ActivityMonitor?, minHits: Int): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.checkMonitorHit","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/check-monitor-hit.html","searchKeys":["checkMonitorHit","open override fun checkMonitorHit(monitor: Instrumentation.ActivityMonitor?, minHits: Int): Boolean","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.checkMonitorHit"]},{"name":"open override fun endPerformanceSnapshot()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.endPerformanceSnapshot","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/end-performance-snapshot.html","searchKeys":["endPerformanceSnapshot","open override fun endPerformanceSnapshot()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.endPerformanceSnapshot"]},{"name":"open override fun finish(resultCode: Int, results: Bundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.finish","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/finish.html","searchKeys":["finish","open override fun finish(resultCode: Int, results: Bundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.finish"]},{"name":"open override fun getAllocCounts(): Bundle","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getAllocCounts","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-alloc-counts.html","searchKeys":["getAllocCounts","open override fun getAllocCounts(): Bundle","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getAllocCounts"]},{"name":"open override fun getBinderCounts(): Bundle","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getBinderCounts","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-binder-counts.html","searchKeys":["getBinderCounts","open override fun getBinderCounts(): Bundle","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getBinderCounts"]},{"name":"open override fun getClassLoader(): ClassLoader","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.TransferActivity.getClassLoader","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-transfer-activity/get-class-loader.html","searchKeys":["getClassLoader","open override fun getClassLoader(): ClassLoader","com.github.kyuubiran.ezxhelper.utils.parasitics.TransferActivity.getClassLoader"]},{"name":"open override fun getComponentName(): ComponentName","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getComponentName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-component-name.html","searchKeys":["getComponentName","open override fun getComponentName(): ComponentName","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getComponentName"]},{"name":"open override fun getContext(): Context","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getContext","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-context.html","searchKeys":["getContext","open override fun getContext(): Context","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getContext"]},{"name":"open override fun getProcessName(): String","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getProcessName","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-process-name.html","searchKeys":["getProcessName","open override fun getProcessName(): String","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getProcessName"]},{"name":"open override fun getTargetContext(): Context","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getTargetContext","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-target-context.html","searchKeys":["getTargetContext","open override fun getTargetContext(): Context","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getTargetContext"]},{"name":"open override fun getUiAutomation(): UiAutomation","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getUiAutomation","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-ui-automation.html","searchKeys":["getUiAutomation","open override fun getUiAutomation(): UiAutomation","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getUiAutomation"]},{"name":"open override fun getUiAutomation(flags: Int): UiAutomation","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getUiAutomation","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/get-ui-automation.html","searchKeys":["getUiAutomation","open override fun getUiAutomation(flags: Int): UiAutomation","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.getUiAutomation"]},{"name":"open override fun handleMessage(msg: Message): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyHandler.handleMessage","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-handler/handle-message.html","searchKeys":["handleMessage","open override fun handleMessage(msg: Message): Boolean","com.github.kyuubiran.ezxhelper.utils.parasitics.MyHandler.handleMessage"]},{"name":"open override fun invokeContextMenuAction(targetActivity: Activity?, id: Int, flag: Int): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.invokeContextMenuAction","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/invoke-context-menu-action.html","searchKeys":["invokeContextMenuAction","open override fun invokeContextMenuAction(targetActivity: Activity?, id: Int, flag: Int): Boolean","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.invokeContextMenuAction"]},{"name":"open override fun invokeMenuActionSync(targetActivity: Activity?, id: Int, flag: Int): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.invokeMenuActionSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/invoke-menu-action-sync.html","searchKeys":["invokeMenuActionSync","open override fun invokeMenuActionSync(targetActivity: Activity?, id: Int, flag: Int): Boolean","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.invokeMenuActionSync"]},{"name":"open override fun isProfiling(): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.isProfiling","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/is-profiling.html","searchKeys":["isProfiling","open override fun isProfiling(): Boolean","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.isProfiling"]},{"name":"open override fun newActivity(cl: ClassLoader?, className: String?, intent: Intent?): Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.newActivity","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/new-activity.html","searchKeys":["newActivity","open override fun newActivity(cl: ClassLoader?, className: String?, intent: Intent?): Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.newActivity"]},{"name":"open override fun newActivity(clazz: Class<*>?, context: Context?, token: IBinder?, application: Application?, intent: Intent?, info: ActivityInfo?, title: CharSequence?, parent: Activity?, id: String?, lastNonConfigurationInstance: Any?): Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.newActivity","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/new-activity.html","searchKeys":["newActivity","open override fun newActivity(clazz: Class<*>?, context: Context?, token: IBinder?, application: Application?, intent: Intent?, info: ActivityInfo?, title: CharSequence?, parent: Activity?, id: String?, lastNonConfigurationInstance: Any?): Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.newActivity"]},{"name":"open override fun newApplication(cl: ClassLoader?, className: String?, context: Context?): Application","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.newApplication","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/new-application.html","searchKeys":["newApplication","open override fun newApplication(cl: ClassLoader?, className: String?, context: Context?): Application","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.newApplication"]},{"name":"open override fun onCreate(arguments: Bundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onCreate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/on-create.html","searchKeys":["onCreate","open override fun onCreate(arguments: Bundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onCreate"]},{"name":"open override fun onDestroy()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onDestroy","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onDestroy"]},{"name":"open override fun onException(obj: Any?, e: Throwable?): Boolean","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onException","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/on-exception.html","searchKeys":["onException","open override fun onException(obj: Any?, e: Throwable?): Boolean","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onException"]},{"name":"open override fun onStart()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onStart","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/on-start.html","searchKeys":["onStart","open override fun onStart()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.onStart"]},{"name":"open override fun removeMonitor(monitor: Instrumentation.ActivityMonitor?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.removeMonitor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/remove-monitor.html","searchKeys":["removeMonitor","open override fun removeMonitor(monitor: Instrumentation.ActivityMonitor?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.removeMonitor"]},{"name":"open override fun runOnMainSync(runner: Runnable?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.runOnMainSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/run-on-main-sync.html","searchKeys":["runOnMainSync","open override fun runOnMainSync(runner: Runnable?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.runOnMainSync"]},{"name":"open override fun sendCharacterSync(keyCode: Int)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendCharacterSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-character-sync.html","searchKeys":["sendCharacterSync","open override fun sendCharacterSync(keyCode: Int)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendCharacterSync"]},{"name":"open override fun sendKeyDownUpSync(key: Int)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendKeyDownUpSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-key-down-up-sync.html","searchKeys":["sendKeyDownUpSync","open override fun sendKeyDownUpSync(key: Int)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendKeyDownUpSync"]},{"name":"open override fun sendKeySync(event: KeyEvent?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendKeySync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-key-sync.html","searchKeys":["sendKeySync","open override fun sendKeySync(event: KeyEvent?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendKeySync"]},{"name":"open override fun sendPointerSync(event: MotionEvent?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendPointerSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-pointer-sync.html","searchKeys":["sendPointerSync","open override fun sendPointerSync(event: MotionEvent?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendPointerSync"]},{"name":"open override fun sendStatus(resultCode: Int, results: Bundle?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendStatus","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-status.html","searchKeys":["sendStatus","open override fun sendStatus(resultCode: Int, results: Bundle?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendStatus"]},{"name":"open override fun sendStringSync(text: String?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendStringSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-string-sync.html","searchKeys":["sendStringSync","open override fun sendStringSync(text: String?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendStringSync"]},{"name":"open override fun sendTrackballEventSync(event: MotionEvent?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendTrackballEventSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/send-trackball-event-sync.html","searchKeys":["sendTrackballEventSync","open override fun sendTrackballEventSync(event: MotionEvent?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.sendTrackballEventSync"]},{"name":"open override fun setAutomaticPerformanceSnapshots()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.setAutomaticPerformanceSnapshots","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/set-automatic-performance-snapshots.html","searchKeys":["setAutomaticPerformanceSnapshots","open override fun setAutomaticPerformanceSnapshots()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.setAutomaticPerformanceSnapshots"]},{"name":"open override fun setInTouchMode(inTouch: Boolean)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.setInTouchMode","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/set-in-touch-mode.html","searchKeys":["setInTouchMode","open override fun setInTouchMode(inTouch: Boolean)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.setInTouchMode"]},{"name":"open override fun start()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.start","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/start.html","searchKeys":["start","open override fun start()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.start"]},{"name":"open override fun startActivitySync(intent: Intent, options: Bundle?): Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startActivitySync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/start-activity-sync.html","searchKeys":["startActivitySync","open override fun startActivitySync(intent: Intent, options: Bundle?): Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startActivitySync"]},{"name":"open override fun startActivitySync(intent: Intent?): Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startActivitySync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/start-activity-sync.html","searchKeys":["startActivitySync","open override fun startActivitySync(intent: Intent?): Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startActivitySync"]},{"name":"open override fun startAllocCounting()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startAllocCounting","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/start-alloc-counting.html","searchKeys":["startAllocCounting","open override fun startAllocCounting()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startAllocCounting"]},{"name":"open override fun startPerformanceSnapshot()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startPerformanceSnapshot","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/start-performance-snapshot.html","searchKeys":["startPerformanceSnapshot","open override fun startPerformanceSnapshot()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startPerformanceSnapshot"]},{"name":"open override fun startProfiling()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startProfiling","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/start-profiling.html","searchKeys":["startProfiling","open override fun startProfiling()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.startProfiling"]},{"name":"open override fun stopAllocCounting()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.stopAllocCounting","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/stop-alloc-counting.html","searchKeys":["stopAllocCounting","open override fun stopAllocCounting()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.stopAllocCounting"]},{"name":"open override fun stopProfiling()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.stopProfiling","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/stop-profiling.html","searchKeys":["stopProfiling","open override fun stopProfiling()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.stopProfiling"]},{"name":"open override fun waitForIdle(recipient: Runnable?)","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForIdle","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/wait-for-idle.html","searchKeys":["waitForIdle","open override fun waitForIdle(recipient: Runnable?)","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForIdle"]},{"name":"open override fun waitForIdleSync()","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForIdleSync","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/wait-for-idle-sync.html","searchKeys":["waitForIdleSync","open override fun waitForIdleSync()","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForIdleSync"]},{"name":"open override fun waitForMonitor(monitor: Instrumentation.ActivityMonitor?): Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForMonitor","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/wait-for-monitor.html","searchKeys":["waitForMonitor","open override fun waitForMonitor(monitor: Instrumentation.ActivityMonitor?): Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForMonitor"]},{"name":"open override fun waitForMonitorWithTimeout(monitor: Instrumentation.ActivityMonitor?, timeOut: Long): Activity","description":"com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForMonitorWithTimeout","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils.parasitics/-my-instrumentation/wait-for-monitor-with-timeout.html","searchKeys":["waitForMonitorWithTimeout","open override fun waitForMonitorWithTimeout(monitor: Instrumentation.ActivityMonitor?, timeOut: Long): Activity","com.github.kyuubiran.ezxhelper.utils.parasitics.MyInstrumentation.waitForMonitorWithTimeout"]},{"name":"operator fun invoke(value: T)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.invoke","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/invoke.html","searchKeys":["invoke","operator fun invoke(value: T)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.invoke"]},{"name":"operator fun minusAssign(listener: (T) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.minusAssign","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/minus-assign.html","searchKeys":["minusAssign","operator fun minusAssign(listener: (T) -> Unit)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.minusAssign"]},{"name":"operator fun minusAssign(listeners: Array<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.minusAssign","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/minus-assign.html","searchKeys":["minusAssign","operator fun minusAssign(listeners: Array<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.minusAssign"]},{"name":"operator fun minusAssign(listeners: Collection<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.minusAssign","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/minus-assign.html","searchKeys":["minusAssign","operator fun minusAssign(listeners: Collection<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.minusAssign"]},{"name":"operator fun plusAssign(listener: (T) -> Unit)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.plusAssign","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(listener: (T) -> Unit)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.plusAssign"]},{"name":"operator fun plusAssign(listeners: Array<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.plusAssign","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(listeners: Array<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.plusAssign"]},{"name":"operator fun plusAssign(listeners: Collection<(T) -> Unit>)","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.plusAssign","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(listeners: Collection<(T) -> Unit>)","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.plusAssign"]},{"name":"val Class<*>.isAbstract: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isAbstract","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-abstract.html","searchKeys":["isAbstract","val Class<*>.isAbstract: Boolean","com.github.kyuubiran.ezxhelper.utils.isAbstract"]},{"name":"val Class<*>.isFinal: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isFinal","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-final.html","searchKeys":["isFinal","val Class<*>.isFinal: Boolean","com.github.kyuubiran.ezxhelper.utils.isFinal"]},{"name":"val Class<*>.isNotAbstract: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotAbstract","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-abstract.html","searchKeys":["isNotAbstract","val Class<*>.isNotAbstract: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotAbstract"]},{"name":"val Class<*>.isNotFinal: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotFinal","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-final.html","searchKeys":["isNotFinal","val Class<*>.isNotFinal: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotFinal"]},{"name":"val Class<*>.isNotPrivate: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotPrivate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-private.html","searchKeys":["isNotPrivate","val Class<*>.isNotPrivate: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotPrivate"]},{"name":"val Class<*>.isNotProtected: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotProtected","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-protected.html","searchKeys":["isNotProtected","val Class<*>.isNotProtected: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotProtected"]},{"name":"val Class<*>.isNotPublic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotPublic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-public.html","searchKeys":["isNotPublic","val Class<*>.isNotPublic: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotPublic"]},{"name":"val Class<*>.isNotStatic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotStatic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-static.html","searchKeys":["isNotStatic","val Class<*>.isNotStatic: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotStatic"]},{"name":"val Class<*>.isPrivate: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isPrivate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-private.html","searchKeys":["isPrivate","val Class<*>.isPrivate: Boolean","com.github.kyuubiran.ezxhelper.utils.isPrivate"]},{"name":"val Class<*>.isProtected: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isProtected","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-protected.html","searchKeys":["isProtected","val Class<*>.isProtected: Boolean","com.github.kyuubiran.ezxhelper.utils.isProtected"]},{"name":"val Class<*>.isPublic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isPublic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-public.html","searchKeys":["isPublic","val Class<*>.isPublic: Boolean","com.github.kyuubiran.ezxhelper.utils.isPublic"]},{"name":"val Class<*>.isStatic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isStatic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-static.html","searchKeys":["isStatic","val Class<*>.isStatic: Boolean","com.github.kyuubiran.ezxhelper.utils.isStatic"]},{"name":"val Constructor<*>.emptyParam: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.emptyParam","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/empty-param.html","searchKeys":["emptyParam","val Constructor<*>.emptyParam: Boolean","com.github.kyuubiran.ezxhelper.utils.emptyParam"]},{"name":"val Constructor<*>.notEmptyParam: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.notEmptyParam","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/not-empty-param.html","searchKeys":["notEmptyParam","val Constructor<*>.notEmptyParam: Boolean","com.github.kyuubiran.ezxhelper.utils.notEmptyParam"]},{"name":"val Constructor<*>.paramCount: Int","description":"com.github.kyuubiran.ezxhelper.utils.paramCount","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/param-count.html","searchKeys":["paramCount","val Constructor<*>.paramCount: Int","com.github.kyuubiran.ezxhelper.utils.paramCount"]},{"name":"val JSONArray.indices: IntRange","description":"com.github.kyuubiran.ezxhelper.utils.indices","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/indices.html","searchKeys":["indices","val JSONArray.indices: IntRange","com.github.kyuubiran.ezxhelper.utils.indices"]},{"name":"val JSONArray.isEmpty: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isEmpty","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-empty.html","searchKeys":["isEmpty","val JSONArray.isEmpty: Boolean","com.github.kyuubiran.ezxhelper.utils.isEmpty"]},{"name":"val JSONArray.isNotEmpty: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotEmpty","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-empty.html","searchKeys":["isNotEmpty","val JSONArray.isNotEmpty: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotEmpty"]},{"name":"val Member.isAbstract: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isAbstract","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-abstract.html","searchKeys":["isAbstract","val Member.isAbstract: Boolean","com.github.kyuubiran.ezxhelper.utils.isAbstract"]},{"name":"val Member.isFinal: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isFinal","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-final.html","searchKeys":["isFinal","val Member.isFinal: Boolean","com.github.kyuubiran.ezxhelper.utils.isFinal"]},{"name":"val Member.isNative: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNative","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-native.html","searchKeys":["isNative","val Member.isNative: Boolean","com.github.kyuubiran.ezxhelper.utils.isNative"]},{"name":"val Member.isNotAbstract: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotAbstract","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-abstract.html","searchKeys":["isNotAbstract","val Member.isNotAbstract: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotAbstract"]},{"name":"val Member.isNotFinal: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotFinal","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-final.html","searchKeys":["isNotFinal","val Member.isNotFinal: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotFinal"]},{"name":"val Member.isNotNative: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotNative","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-native.html","searchKeys":["isNotNative","val Member.isNotNative: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotNative"]},{"name":"val Member.isNotPrivate: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotPrivate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-private.html","searchKeys":["isNotPrivate","val Member.isNotPrivate: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotPrivate"]},{"name":"val Member.isNotProtected: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotProtected","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-protected.html","searchKeys":["isNotProtected","val Member.isNotProtected: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotProtected"]},{"name":"val Member.isNotPublic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotPublic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-public.html","searchKeys":["isNotPublic","val Member.isNotPublic: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotPublic"]},{"name":"val Member.isNotStatic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotStatic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-static.html","searchKeys":["isNotStatic","val Member.isNotStatic: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotStatic"]},{"name":"val Member.isNotSynchronized: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotSynchronized","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-synchronized.html","searchKeys":["isNotSynchronized","val Member.isNotSynchronized: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotSynchronized"]},{"name":"val Member.isNotTransient: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotTransient","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-transient.html","searchKeys":["isNotTransient","val Member.isNotTransient: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotTransient"]},{"name":"val Member.isNotVolatile: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isNotVolatile","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-not-volatile.html","searchKeys":["isNotVolatile","val Member.isNotVolatile: Boolean","com.github.kyuubiran.ezxhelper.utils.isNotVolatile"]},{"name":"val Member.isPrivate: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isPrivate","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-private.html","searchKeys":["isPrivate","val Member.isPrivate: Boolean","com.github.kyuubiran.ezxhelper.utils.isPrivate"]},{"name":"val Member.isProtected: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isProtected","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-protected.html","searchKeys":["isProtected","val Member.isProtected: Boolean","com.github.kyuubiran.ezxhelper.utils.isProtected"]},{"name":"val Member.isPublic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isPublic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-public.html","searchKeys":["isPublic","val Member.isPublic: Boolean","com.github.kyuubiran.ezxhelper.utils.isPublic"]},{"name":"val Member.isStatic: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isStatic","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-static.html","searchKeys":["isStatic","val Member.isStatic: Boolean","com.github.kyuubiran.ezxhelper.utils.isStatic"]},{"name":"val Member.isSynchronized: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isSynchronized","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-synchronized.html","searchKeys":["isSynchronized","val Member.isSynchronized: Boolean","com.github.kyuubiran.ezxhelper.utils.isSynchronized"]},{"name":"val Member.isTransient: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isTransient","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-transient.html","searchKeys":["isTransient","val Member.isTransient: Boolean","com.github.kyuubiran.ezxhelper.utils.isTransient"]},{"name":"val Member.isVolatile: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.isVolatile","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/is-volatile.html","searchKeys":["isVolatile","val Member.isVolatile: Boolean","com.github.kyuubiran.ezxhelper.utils.isVolatile"]},{"name":"val Method.emptyParam: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.emptyParam","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/empty-param.html","searchKeys":["emptyParam","val Method.emptyParam: Boolean","com.github.kyuubiran.ezxhelper.utils.emptyParam"]},{"name":"val Method.notEmptyParam: Boolean","description":"com.github.kyuubiran.ezxhelper.utils.notEmptyParam","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/not-empty-param.html","searchKeys":["notEmptyParam","val Method.notEmptyParam: Boolean","com.github.kyuubiran.ezxhelper.utils.notEmptyParam"]},{"name":"val Method.paramCount: Int","description":"com.github.kyuubiran.ezxhelper.utils.paramCount","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/param-count.html","searchKeys":["paramCount","val Method.paramCount: Int","com.github.kyuubiran.ezxhelper.utils.paramCount"]},{"name":"val ViewGroup.indices: IntRange","description":"com.github.kyuubiran.ezxhelper.utils.indices","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/indices.html","searchKeys":["indices","val ViewGroup.indices: IntRange","com.github.kyuubiran.ezxhelper.utils.indices"]},{"name":"val argTypes: Array<out Class<*>>","description":"com.github.kyuubiran.ezxhelper.utils.ArgTypes.argTypes","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-arg-types/arg-types.html","searchKeys":["argTypes","val argTypes: Array<out Class<*>>","com.github.kyuubiran.ezxhelper.utils.ArgTypes.argTypes"]},{"name":"val args: Array<out Any?>","description":"com.github.kyuubiran.ezxhelper.utils.Args.args","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-args/args.html","searchKeys":["args","val args: Array<out Any?>","com.github.kyuubiran.ezxhelper.utils.Args.args"]},{"name":"val isAppContextInited: Boolean","description":"com.github.kyuubiran.ezxhelper.init.InitFields.isAppContextInited","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/is-app-context-inited.html","searchKeys":["isAppContextInited","val isAppContextInited: Boolean","com.github.kyuubiran.ezxhelper.init.InitFields.isAppContextInited"]},{"name":"val isEzXClassLoaderInited: Boolean","description":"com.github.kyuubiran.ezxhelper.init.InitFields.isEzXClassLoaderInited","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/is-ez-x-class-loader-inited.html","searchKeys":["isEzXClassLoaderInited","val isEzXClassLoaderInited: Boolean","com.github.kyuubiran.ezxhelper.init.InitFields.isEzXClassLoaderInited"]},{"name":"val isHostPackageNameInited: Boolean","description":"com.github.kyuubiran.ezxhelper.init.InitFields.isHostPackageNameInited","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/is-host-package-name-inited.html","searchKeys":["isHostPackageNameInited","val isHostPackageNameInited: Boolean","com.github.kyuubiran.ezxhelper.init.InitFields.isHostPackageNameInited"]},{"name":"val isModulePathInited: Boolean","description":"com.github.kyuubiran.ezxhelper.init.InitFields.isModulePathInited","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/is-module-path-inited.html","searchKeys":["isModulePathInited","val isModulePathInited: Boolean","com.github.kyuubiran.ezxhelper.init.InitFields.isModulePathInited"]},{"name":"val isModuleResInited: Boolean","description":"com.github.kyuubiran.ezxhelper.init.InitFields.isModuleResInited","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.init/-init-fields/is-module-res-inited.html","searchKeys":["isModuleResInited","val isModuleResInited: Boolean","com.github.kyuubiran.ezxhelper.init.InitFields.isModuleResInited"]},{"name":"val mainHandler: Handler","description":"com.github.kyuubiran.ezxhelper.utils.mainHandler","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/main-handler.html","searchKeys":["mainHandler","val mainHandler: Handler","com.github.kyuubiran.ezxhelper.utils.mainHandler"]},{"name":"val onValueChanged: Observe.ValueChangedEvent<T>","description":"com.github.kyuubiran.ezxhelper.utils.Observe.onValueChanged","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/on-value-changed.html","searchKeys":["onValueChanged","val onValueChanged: Observe.ValueChangedEvent<T>","com.github.kyuubiran.ezxhelper.utils.Observe.onValueChanged"]},{"name":"val runtimeProcess: Runtime","description":"com.github.kyuubiran.ezxhelper.utils.runtimeProcess","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/runtime-process.html","searchKeys":["runtimeProcess","val runtimeProcess: Runtime","com.github.kyuubiran.ezxhelper.utils.runtimeProcess"]},{"name":"value class ArgTypes(val argTypes: Array<out Class<*>>)","description":"com.github.kyuubiran.ezxhelper.utils.ArgTypes","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-arg-types/index.html","searchKeys":["ArgTypes","value class ArgTypes(val argTypes: Array<out Class<*>>)","com.github.kyuubiran.ezxhelper.utils.ArgTypes"]},{"name":"value class Args(val args: Array<out Any?>)","description":"com.github.kyuubiran.ezxhelper.utils.Args","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-args/index.html","searchKeys":["Args","value class Args(val args: Array<out Any?>)","com.github.kyuubiran.ezxhelper.utils.Args"]},{"name":"var cancelLastToast: Boolean = false","description":"com.github.kyuubiran.ezxhelper.utils.Log.cancelLastToast","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/cancel-last-toast.html","searchKeys":["cancelLastToast","var cancelLastToast: Boolean = false","com.github.kyuubiran.ezxhelper.utils.Log.cancelLastToast"]},{"name":"var currentLogger: Logger","description":"com.github.kyuubiran.ezxhelper.utils.Log.currentLogger","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-log/current-logger.html","searchKeys":["currentLogger","var currentLogger: Logger","com.github.kyuubiran.ezxhelper.utils.Log.currentLogger"]},{"name":"var logLevel: Int","description":"com.github.kyuubiran.ezxhelper.utils.Logger.logLevel","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/log-level.html","searchKeys":["logLevel","var logLevel: Int","com.github.kyuubiran.ezxhelper.utils.Logger.logLevel"]},{"name":"var logTag: String","description":"com.github.kyuubiran.ezxhelper.utils.Logger.logTag","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/log-tag.html","searchKeys":["logTag","var logTag: String","com.github.kyuubiran.ezxhelper.utils.Logger.logTag"]},{"name":"var logXp: Boolean = true","description":"com.github.kyuubiran.ezxhelper.utils.Logger.logXp","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/log-xp.html","searchKeys":["logXp","var logXp: Boolean = true","com.github.kyuubiran.ezxhelper.utils.Logger.logXp"]},{"name":"var onThrow: (thr: Throwable) -> Unit? = null","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.onThrow","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/on-throw.html","searchKeys":["onThrow","var onThrow: (thr: Throwable) -> Unit? = null","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.onThrow"]},{"name":"var toastTag: String? = null","description":"com.github.kyuubiran.ezxhelper.utils.Logger.toastTag","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-logger/toast-tag.html","searchKeys":["toastTag","var toastTag: String? = null","com.github.kyuubiran.ezxhelper.utils.Logger.toastTag"]},{"name":"var unsafeInvoke: Boolean = false","description":"com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.unsafeInvoke","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/-value-changed-event/unsafe-invoke.html","searchKeys":["unsafeInvoke","var unsafeInvoke: Boolean = false","com.github.kyuubiran.ezxhelper.utils.Observe.ValueChangedEvent.unsafeInvoke"]},{"name":"var value: T","description":"com.github.kyuubiran.ezxhelper.utils.Observe.value","location":"-ez-x-helper/com.github.kyuubiran.ezxhelper.utils/-observe/value.html","searchKeys":["value","var value: T","com.github.kyuubiran.ezxhelper.utils.Observe.value"]}]
